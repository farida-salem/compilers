Terminals unused in grammar

    THEN


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: functions function
    3          | function

    4 function: func_types IDENTIFIER '(' params ')' func_block
    5         | VOID IDENTIFIER '(' params ')' block

    6 params: param_list
    7       | ε

    8 param_list: param_list ',' param
    9           | param

   10 param: type IDENTIFIER

   11 func_types: INT
   12           | FLOAT
   13           | CHAR
   14           | CONST func_types

   15 type: INT
   16     | FLOAT
   17     | CHAR
   18     | VOID
   19     | CONST type

   20 block: '{' declarations statements '}'

   21 func_block: '{' declarations statements return_statement ';' '}'

   22 declarations: declarations declaration
   23             | ε

   24 declaration: type decl_list ';'

   25 decl_list: decl_list ',' IDENTIFIER
   26          | IDENTIFIER

   27 statements: statements statement
   28           | ε

   29 statement: assignment ';'
   30          | if_statement
   31          | while_statement
   32          | repeat_until_statement
   33          | for_statement
   34          | switch_statement
   35          | return_statement ';'
   36          | BREAK ';'
   37          | CONTINUE ';'
   38          | block

   39 assignment: IDENTIFIER '=' expression

   40 if_statement: IF '(' expression ')' statement ELSE statement

   41 while_statement: WHILE '(' expression ')' statement

   42 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';'

   43 for_statement: FOR '(' assignment ';' expression ';' assignment ')' statement

   44 switch_statement: SWITCH '(' expression ')' '{' case_list '}'

   45 case_list: case_list CASE constant ':' statements
   46          | case_list DEFAULT ':' statements
   47          | ε

   48 constant: NUMBER
   49         | IDENTIFIER

   50 return_statement: RETURN expression

   51 expression: expression PLUS expression
   52           | expression MINUS expression
   53           | expression MULT expression
   54           | expression DIV expression
   55           | expression MOD expression
   56           | expression EQ expression
   57           | expression NEQ expression
   58           | expression '<' expression
   59           | expression '>' expression
   60           | expression LE expression
   61           | expression GE expression
   62           | '(' expression ')'
   63           | IDENTIFIER
   64           | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 40 41 42 43 44 62
    ')' (41) 4 5 40 41 42 43 44 62
    ',' (44) 8 25
    ':' (58) 45 46
    ';' (59) 21 24 29 35 36 37 42 43
    '<' (60) 58
    '=' (61) 39
    '>' (62) 59
    '{' (123) 20 21 44
    '}' (125) 20 21 44
    error (256)
    NUMBER <num> (258) 48 64
    IDENTIFIER <id> (259) 4 5 10 25 26 39 49 63
    IF (260) 40
    THEN (261)
    ELSE (262) 40
    WHILE (263) 41
    REPEAT (264) 42
    UNTIL (265) 42
    FOR (266) 43
    SWITCH (267) 44
    CASE (268) 45
    DEFAULT (269) 46
    BREAK (270) 36
    CONTINUE (271) 37
    RETURN (272) 50
    INT (273) 11 15
    FLOAT (274) 12 16
    CHAR (275) 13 17
    VOID (276) 5 18
    CONST (277) 14 19
    EQ (278) 56
    NEQ (279) 57
    LE (280) 60
    GE (281) 61
    PLUS (282) 51
    MINUS (283) 52
    MULT (284) 53
    DIV (285) 54
    MOD (286) 55


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    functions (44)
        on left: 2 3
        on right: 1 2
    function (45)
        on left: 4 5
        on right: 2 3
    params (46)
        on left: 6 7
        on right: 4 5
    param_list (47)
        on left: 8 9
        on right: 6 8
    param (48)
        on left: 10
        on right: 8 9
    func_types (49)
        on left: 11 12 13 14
        on right: 4 14
    type (50)
        on left: 15 16 17 18 19
        on right: 10 19 24
    block (51)
        on left: 20
        on right: 5 38
    func_block (52)
        on left: 21
        on right: 4
    declarations (53)
        on left: 22 23
        on right: 20 21 22
    declaration (54)
        on left: 24
        on right: 22
    decl_list (55)
        on left: 25 26
        on right: 24 25
    statements (56)
        on left: 27 28
        on right: 20 21 27 42 45 46
    statement (57)
        on left: 29 30 31 32 33 34 35 36 37 38
        on right: 27 40 41 43
    assignment (58)
        on left: 39
        on right: 29 43
    if_statement (59)
        on left: 40
        on right: 30
    while_statement (60)
        on left: 41
        on right: 31
    repeat_until_statement (61)
        on left: 42
        on right: 32
    for_statement (62)
        on left: 43
        on right: 33
    switch_statement (63)
        on left: 44
        on right: 34
    case_list (64)
        on left: 45 46 47
        on right: 44 45 46
    constant (65)
        on left: 48 49
        on right: 45
    return_statement (66)
        on left: 50
        on right: 21 35
    expression (67)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 39 40 41 42 43 44 50 51 52 53 54 55 56 57 58 59 60 61 62


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4
    CONST  shift, and go to state 5

    program     go to state 6
    functions   go to state 7
    function    go to state 8
    func_types  go to state 9


State 1

   11 func_types: INT •

    $default  reduce using rule 11 (func_types)


State 2

   12 func_types: FLOAT •

    $default  reduce using rule 12 (func_types)


State 3

   13 func_types: CHAR •

    $default  reduce using rule 13 (func_types)


State 4

    5 function: VOID • IDENTIFIER '(' params ')' block

    IDENTIFIER  shift, and go to state 10


State 5

   14 func_types: CONST • func_types

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    CONST  shift, and go to state 5

    func_types  go to state 11


State 6

    0 $accept: program • $end

    $end  shift, and go to state 12


State 7

    1 program: functions •
    2 functions: functions • function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4
    CONST  shift, and go to state 5

    $default  reduce using rule 1 (program)

    function    go to state 13
    func_types  go to state 9


State 8

    3 functions: function •

    $default  reduce using rule 3 (functions)


State 9

    4 function: func_types • IDENTIFIER '(' params ')' func_block

    IDENTIFIER  shift, and go to state 14


State 10

    5 function: VOID IDENTIFIER • '(' params ')' block

    '('  shift, and go to state 15


State 11

   14 func_types: CONST func_types •

    $default  reduce using rule 14 (func_types)


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 functions: functions function •

    $default  reduce using rule 2 (functions)


State 14

    4 function: func_types IDENTIFIER • '(' params ')' func_block

    '('  shift, and go to state 16


State 15

    5 function: VOID IDENTIFIER '(' • params ')' block

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    $default  reduce using rule 7 (params)

    params      go to state 22
    param_list  go to state 23
    param       go to state 24
    type        go to state 25


State 16

    4 function: func_types IDENTIFIER '(' • params ')' func_block

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    $default  reduce using rule 7 (params)

    params      go to state 26
    param_list  go to state 23
    param       go to state 24
    type        go to state 25


State 17

   15 type: INT •

    $default  reduce using rule 15 (type)


State 18

   16 type: FLOAT •

    $default  reduce using rule 16 (type)


State 19

   17 type: CHAR •

    $default  reduce using rule 17 (type)


State 20

   18 type: VOID •

    $default  reduce using rule 18 (type)


State 21

   19 type: CONST • type

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    type  go to state 27


State 22

    5 function: VOID IDENTIFIER '(' params • ')' block

    ')'  shift, and go to state 28


State 23

    6 params: param_list •
    8 param_list: param_list • ',' param

    ','  shift, and go to state 29

    $default  reduce using rule 6 (params)


State 24

    9 param_list: param •

    $default  reduce using rule 9 (param_list)


State 25

   10 param: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 30


State 26

    4 function: func_types IDENTIFIER '(' params • ')' func_block

    ')'  shift, and go to state 31


State 27

   19 type: CONST type •

    $default  reduce using rule 19 (type)


State 28

    5 function: VOID IDENTIFIER '(' params ')' • block

    '{'  shift, and go to state 32

    block  go to state 33


State 29

    8 param_list: param_list ',' • param

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    param  go to state 34
    type   go to state 25


State 30

   10 param: type IDENTIFIER •

    $default  reduce using rule 10 (param)


State 31

    4 function: func_types IDENTIFIER '(' params ')' • func_block

    '{'  shift, and go to state 35

    func_block  go to state 36


State 32

   20 block: '{' • declarations statements '}'

    $default  reduce using rule 23 (declarations)

    declarations  go to state 37


State 33

    5 function: VOID IDENTIFIER '(' params ')' block •

    $default  reduce using rule 5 (function)


State 34

    8 param_list: param_list ',' param •

    $default  reduce using rule 8 (param_list)


State 35

   21 func_block: '{' • declarations statements return_statement ';' '}'

    $default  reduce using rule 23 (declarations)

    declarations  go to state 38


State 36

    4 function: func_types IDENTIFIER '(' params ')' func_block •

    $default  reduce using rule 4 (function)


State 37

   20 block: '{' declarations • statements '}'
   22 declarations: declarations • declaration

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    $default  reduce using rule 28 (statements)

    type         go to state 39
    declaration  go to state 40
    statements   go to state 41


State 38

   21 func_block: '{' declarations • statements return_statement ';' '}'
   22 declarations: declarations • declaration

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    CHAR   shift, and go to state 19
    VOID   shift, and go to state 20
    CONST  shift, and go to state 21

    $default  reduce using rule 28 (statements)

    type         go to state 39
    declaration  go to state 40
    statements   go to state 42


State 39

   24 declaration: type • decl_list ';'

    IDENTIFIER  shift, and go to state 43

    decl_list  go to state 44


State 40

   22 declarations: declarations declaration •

    $default  reduce using rule 22 (declarations)


State 41

   20 block: '{' declarations statements • '}'
   27 statements: statements • statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32
    '}'         shift, and go to state 54

    block                   go to state 55
    statement               go to state 56
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 42

   21 func_block: '{' declarations statements • return_statement ';' '}'
   27 statements: statements • statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 56
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 64


State 43

   26 decl_list: IDENTIFIER •

    $default  reduce using rule 26 (decl_list)


State 44

   24 declaration: type decl_list • ';'
   25 decl_list: decl_list • ',' IDENTIFIER

    ';'  shift, and go to state 65
    ','  shift, and go to state 66


State 45

   39 assignment: IDENTIFIER • '=' expression

    '='  shift, and go to state 67


State 46

   40 if_statement: IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 68


State 47

   41 while_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 69


State 48

   42 repeat_until_statement: REPEAT • statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 28 (statements)

    statements  go to state 70


State 49

   43 for_statement: FOR • '(' assignment ';' expression ';' assignment ')' statement

    '('  shift, and go to state 71


State 50

   44 switch_statement: SWITCH • '(' expression ')' '{' case_list '}'

    '('  shift, and go to state 72


State 51

   36 statement: BREAK • ';'

    ';'  shift, and go to state 73


State 52

   37 statement: CONTINUE • ';'

    ';'  shift, and go to state 74


State 53

   50 return_statement: RETURN • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 78


State 54

   20 block: '{' declarations statements '}' •

    $default  reduce using rule 20 (block)


State 55

   38 statement: block •

    $default  reduce using rule 38 (statement)


State 56

   27 statements: statements statement •

    $default  reduce using rule 27 (statements)


State 57

   29 statement: assignment • ';'

    ';'  shift, and go to state 79


State 58

   30 statement: if_statement •

    $default  reduce using rule 30 (statement)


State 59

   31 statement: while_statement •

    $default  reduce using rule 31 (statement)


State 60

   32 statement: repeat_until_statement •

    $default  reduce using rule 32 (statement)


State 61

   33 statement: for_statement •

    $default  reduce using rule 33 (statement)


State 62

   34 statement: switch_statement •

    $default  reduce using rule 34 (statement)


State 63

   35 statement: return_statement • ';'

    ';'  shift, and go to state 80


State 64

   21 func_block: '{' declarations statements return_statement • ';' '}'
   35 statement: return_statement • ';'

    ';'  shift, and go to state 81


State 65

   24 declaration: type decl_list ';' •

    $default  reduce using rule 24 (declaration)


State 66

   25 decl_list: decl_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 82


State 67

   39 assignment: IDENTIFIER '=' • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 83


State 68

   40 if_statement: IF '(' • expression ')' statement ELSE statement

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 84


State 69

   41 while_statement: WHILE '(' • expression ')' statement

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 85


State 70

   27 statements: statements • statement
   42 repeat_until_statement: REPEAT statements • UNTIL '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    UNTIL       shift, and go to state 86
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 56
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 71

   43 for_statement: FOR '(' • assignment ';' expression ';' assignment ')' statement

    IDENTIFIER  shift, and go to state 45

    assignment  go to state 87


State 72

   44 switch_statement: SWITCH '(' • expression ')' '{' case_list '}'

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 88


State 73

   36 statement: BREAK ';' •

    $default  reduce using rule 36 (statement)


State 74

   37 statement: CONTINUE ';' •

    $default  reduce using rule 37 (statement)


State 75

   64 expression: NUMBER •

    $default  reduce using rule 64 (expression)


State 76

   63 expression: IDENTIFIER •

    $default  reduce using rule 63 (expression)


State 77

   62 expression: '(' • expression ')'

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 89


State 78

   50 return_statement: RETURN expression •
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100

    $default  reduce using rule 50 (return_statement)


State 79

   29 statement: assignment ';' •

    $default  reduce using rule 29 (statement)


State 80

   35 statement: return_statement ';' •

    $default  reduce using rule 35 (statement)


State 81

   21 func_block: '{' declarations statements return_statement ';' • '}'
   35 statement: return_statement ';' •

    '}'  shift, and go to state 101

    $default  reduce using rule 35 (statement)


State 82

   25 decl_list: decl_list ',' IDENTIFIER •

    $default  reduce using rule 25 (decl_list)


State 83

   39 assignment: IDENTIFIER '=' expression •
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100

    $default  reduce using rule 39 (assignment)


State 84

   40 if_statement: IF '(' expression • ')' statement ELSE statement
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ')'    shift, and go to state 102
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 85

   41 while_statement: WHILE '(' expression • ')' statement
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ')'    shift, and go to state 103
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 86

   42 repeat_until_statement: REPEAT statements UNTIL • '(' expression ')' ';'

    '('  shift, and go to state 104


State 87

   43 for_statement: FOR '(' assignment • ';' expression ';' assignment ')' statement

    ';'  shift, and go to state 105


State 88

   44 switch_statement: SWITCH '(' expression • ')' '{' case_list '}'
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ')'    shift, and go to state 106
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 89

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression
   62           | '(' expression • ')'

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ')'    shift, and go to state 107
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 90

   56 expression: expression EQ • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 108


State 91

   57 expression: expression NEQ • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 109


State 92

   60 expression: expression LE • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 110


State 93

   61 expression: expression GE • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 111


State 94

   51 expression: expression PLUS • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 112


State 95

   52 expression: expression MINUS • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 113


State 96

   53 expression: expression MULT • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 114


State 97

   54 expression: expression DIV • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 115


State 98

   55 expression: expression MOD • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 116


State 99

   58 expression: expression '<' • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 117


State 100

   59 expression: expression '>' • expression

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 118


State 101

   21 func_block: '{' declarations statements return_statement ';' '}' •

    $default  reduce using rule 21 (func_block)


State 102

   40 if_statement: IF '(' expression ')' • statement ELSE statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 119
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 103

   41 while_statement: WHILE '(' expression ')' • statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 120
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 104

   42 repeat_until_statement: REPEAT statements UNTIL '(' • expression ')' ';'

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 121


State 105

   43 for_statement: FOR '(' assignment ';' • expression ';' assignment ')' statement

    NUMBER      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    '('         shift, and go to state 77

    expression  go to state 122


State 106

   44 switch_statement: SWITCH '(' expression ')' • '{' case_list '}'

    '{'  shift, and go to state 123


State 107

   62 expression: '(' expression ')' •

    $default  reduce using rule 62 (expression)


State 108

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   56           | expression EQ expression •
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 56 (expression)


State 109

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   57           | expression NEQ expression •
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 57 (expression)


State 110

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   60           | expression LE expression •
   61           | expression • GE expression

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 60 (expression)


State 111

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression
   61           | expression GE expression •

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 61 (expression)


State 112

   51 expression: expression • PLUS expression
   51           | expression PLUS expression •
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ    shift, and go to state 90
    NEQ   shift, and go to state 91
    LE    shift, and go to state 92
    GE    shift, and go to state 93
    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98
    '<'   shift, and go to state 99
    '>'   shift, and go to state 100

    $default  reduce using rule 51 (expression)


State 113

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   52           | expression MINUS expression •
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ    shift, and go to state 90
    NEQ   shift, and go to state 91
    LE    shift, and go to state 92
    GE    shift, and go to state 93
    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98
    '<'   shift, and go to state 99
    '>'   shift, and go to state 100

    $default  reduce using rule 52 (expression)


State 114

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   53           | expression MULT expression •
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 99
    '>'  shift, and go to state 100

    $default  reduce using rule 53 (expression)


State 115

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   54           | expression DIV expression •
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 99
    '>'  shift, and go to state 100

    $default  reduce using rule 54 (expression)


State 116

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   55           | expression MOD expression •
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 99
    '>'  shift, and go to state 100

    $default  reduce using rule 55 (expression)


State 117

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   58           | expression '<' expression •
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 58 (expression)


State 118

   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   59           | expression '>' expression •
   60           | expression • LE expression
   61           | expression • GE expression

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 59 (expression)


State 119

   40 if_statement: IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 124


State 120

   41 while_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 41 (while_statement)


State 121

   42 repeat_until_statement: REPEAT statements UNTIL '(' expression • ')' ';'
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ')'    shift, and go to state 125
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 122

   43 for_statement: FOR '(' assignment ';' expression • ';' assignment ')' statement
   51 expression: expression • PLUS expression
   52           | expression • MINUS expression
   53           | expression • MULT expression
   54           | expression • DIV expression
   55           | expression • MOD expression
   56           | expression • EQ expression
   57           | expression • NEQ expression
   58           | expression • '<' expression
   59           | expression • '>' expression
   60           | expression • LE expression
   61           | expression • GE expression

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    LE     shift, and go to state 92
    GE     shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    ';'    shift, and go to state 126
    '<'    shift, and go to state 99
    '>'    shift, and go to state 100


State 123

   44 switch_statement: SWITCH '(' expression ')' '{' • case_list '}'

    $default  reduce using rule 47 (case_list)

    case_list  go to state 127


State 124

   40 if_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 128
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 125

   42 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' • ';'

    ';'  shift, and go to state 129


State 126

   43 for_statement: FOR '(' assignment ';' expression ';' • assignment ')' statement

    IDENTIFIER  shift, and go to state 45

    assignment  go to state 130


State 127

   44 switch_statement: SWITCH '(' expression ')' '{' case_list • '}'
   45 case_list: case_list • CASE constant ':' statements
   46          | case_list • DEFAULT ':' statements

    CASE     shift, and go to state 131
    DEFAULT  shift, and go to state 132
    '}'      shift, and go to state 133


State 128

   40 if_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 40 (if_statement)


State 129

   42 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';' •

    $default  reduce using rule 42 (repeat_until_statement)


State 130

   43 for_statement: FOR '(' assignment ';' expression ';' assignment • ')' statement

    ')'  shift, and go to state 134


State 131

   45 case_list: case_list CASE • constant ':' statements

    NUMBER      shift, and go to state 135
    IDENTIFIER  shift, and go to state 136

    constant  go to state 137


State 132

   46 case_list: case_list DEFAULT • ':' statements

    ':'  shift, and go to state 138


State 133

   44 switch_statement: SWITCH '(' expression ')' '{' case_list '}' •

    $default  reduce using rule 44 (switch_statement)


State 134

   43 for_statement: FOR '(' assignment ';' expression ';' assignment ')' • statement

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    block                   go to state 55
    statement               go to state 139
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 135

   48 constant: NUMBER •

    $default  reduce using rule 48 (constant)


State 136

   49 constant: IDENTIFIER •

    $default  reduce using rule 49 (constant)


State 137

   45 case_list: case_list CASE constant • ':' statements

    ':'  shift, and go to state 140


State 138

   46 case_list: case_list DEFAULT ':' • statements

    $default  reduce using rule 28 (statements)

    statements  go to state 141


State 139

   43 for_statement: FOR '(' assignment ';' expression ';' assignment ')' statement •

    $default  reduce using rule 43 (for_statement)


State 140

   45 case_list: case_list CASE constant ':' • statements

    $default  reduce using rule 28 (statements)

    statements  go to state 142


State 141

   27 statements: statements • statement
   46 case_list: case_list DEFAULT ':' statements •

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    $default  reduce using rule 46 (case_list)

    block                   go to state 55
    statement               go to state 56
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63


State 142

   27 statements: statements • statement
   45 case_list: case_list CASE constant ':' statements •

    IDENTIFIER  shift, and go to state 45
    IF          shift, and go to state 46
    WHILE       shift, and go to state 47
    REPEAT      shift, and go to state 48
    FOR         shift, and go to state 49
    SWITCH      shift, and go to state 50
    BREAK       shift, and go to state 51
    CONTINUE    shift, and go to state 52
    RETURN      shift, and go to state 53
    '{'         shift, and go to state 32

    $default  reduce using rule 45 (case_list)

    block                   go to state 55
    statement               go to state 56
    assignment              go to state 57
    if_statement            go to state 58
    while_statement         go to state 59
    repeat_until_statement  go to state 60
    for_statement           go to state 61
    switch_statement        go to state 62
    return_statement        go to state 63
