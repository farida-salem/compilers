Terminals unused in grammar

    THEN


State 94 conflicts: 15 shift/reduce
State 95 conflicts: 15 shift/reduce
State 127 conflicts: 4 shift/reduce
State 128 conflicts: 4 shift/reduce
State 129 conflicts: 4 shift/reduce
State 130 conflicts: 4 shift/reduce
State 131 conflicts: 4 shift/reduce
State 132 conflicts: 4 shift/reduce
State 133 conflicts: 4 shift/reduce
State 134 conflicts: 4 shift/reduce
State 135 conflicts: 4 shift/reduce
State 136 conflicts: 15 shift/reduce
State 137 conflicts: 15 shift/reduce
State 138 conflicts: 15 shift/reduce
State 139 conflicts: 15 shift/reduce
State 140 conflicts: 4 shift/reduce
State 141 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: functions function
    3          | function

    4 function: func_types IDENTIFIER '(' params ')' func_block

    5 params: param_list
    6       | ε

    7 param_list: param_list ',' param
    8           | param

    9 param: type IDENTIFIER

   10 func_types: INT
   11           | FLOAT
   12           | CHAR
   13           | CONST func_types
   14           | VOID

   15 type: INT
   16     | FLOAT
   17     | CHAR
   18     | CONST type

   19 block: '{' block_content '}'

   20 block_content: block_content declaration
   21              | block_content statement
   22              | ε

   23 func_block: '{' block_content return_statement '}'

   24 declaration: type decl_list ';'
   25            | type decl_list '=' expression ';'

   26 decl_list: decl_list ',' IDENTIFIER
   27          | IDENTIFIER

   28 statements: statements statement
   29           | ε

   30 statement: assignment
   31          | if_statement
   32          | while_statement
   33          | repeat_until_statement
   34          | for_statement
   35          | switch_statement
   36          | return_statement
   37          | break_statement
   38          | continue_statement
   39          | func_call
   40          | inc_dec
   41          | block

   42 assignment: IDENTIFIER '=' expression ';'

   43 break_statement: BREAK ';'

   44 continue_statement: CONTINUE ';'

   45 func_call: IDENTIFIER '(' ')' ';'

   46 inc_dec: IDENTIFIER INC ';'
   47        | IDENTIFIER DEC ';'
   48        | INC IDENTIFIER ';'
   49        | DEC IDENTIFIER ';'

   50 if_statement: IF '(' expression ')' statement ELSE statement

   51 while_statement: WHILE '(' expression ')' statement

   52 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';'

   53 for_statement: FOR '(' assignment expression ';' assignment ')' statement

   54 switch_statement: SWITCH '(' expression ')' '{' case_list '}'

   55 case_list: case_list CASE constant ':' statements
   56          | case_list DEFAULT ':' statements
   57          | ε

   58 constant: NUMBER
   59         | IDENTIFIER

   60 return_statement: RETURN expression ';'
   61                 | RETURN ';'

   62 expression: expression PLUS expression
   63           | expression MINUS expression
   64           | expression MULT expression
   65           | expression DIV expression
   66           | expression MOD expression
   67           | expression EQ expression
   68           | expression NEQ expression
   69           | expression AND expression
   70           | expression OR expression
   71           | NOT expression
   72           | expression BITWISE_AND expression
   73           | expression BITWISE_OR expression
   74           | BITWISE_NOT expression
   75           | expression '<' expression
   76           | expression '>' expression
   77           | expression LE expression
   78           | expression GE expression
   79           | '(' expression ')'
   80           | IDENTIFIER
   81           | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 45 50 51 52 53 54 79
    ')' (41) 4 45 50 51 52 53 54 79
    ',' (44) 7 26
    ':' (58) 55 56
    ';' (59) 24 25 42 43 44 45 46 47 48 49 52 53 60 61
    '<' (60) 75
    '=' (61) 25 42
    '>' (62) 76
    '{' (123) 19 23 54
    '}' (125) 19 23 54
    error (256)
    NUMBER <num> (258) 58 81
    IDENTIFIER <id> (259) 4 9 26 27 42 45 46 47 48 49 59 80
    IF (260) 50
    THEN (261)
    ELSE (262) 50
    WHILE (263) 51
    REPEAT (264) 52
    UNTIL (265) 52
    FOR (266) 53
    SWITCH (267) 54
    CASE (268) 55
    DEFAULT (269) 56
    BREAK (270) 43
    CONTINUE (271) 44
    RETURN (272) 60 61
    INT (273) 10 15
    FLOAT (274) 11 16
    CHAR (275) 12 17
    VOID (276) 14
    CONST (277) 13 18
    EQ (278) 67
    NEQ (279) 68
    LE (280) 77
    GE (281) 78
    PLUS (282) 62
    MINUS (283) 63
    MULT (284) 64
    DIV (285) 65
    MOD (286) 66
    INC (287) 46 48
    DEC (288) 47 49
    AND (289) 69
    OR (290) 70
    NOT (291) 71
    BITWISE_AND (292) 72
    BITWISE_NOT (293) 74
    BITWISE_OR (294) 73


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    functions (52)
        on left: 2 3
        on right: 1 2
    function (53)
        on left: 4
        on right: 2 3
    params (54)
        on left: 5 6
        on right: 4
    param_list (55)
        on left: 7 8
        on right: 5 7
    param (56)
        on left: 9
        on right: 7 8
    func_types (57)
        on left: 10 11 12 13 14
        on right: 4 13
    type (58)
        on left: 15 16 17 18
        on right: 9 18 24 25
    block (59)
        on left: 19
        on right: 41
    block_content (60)
        on left: 20 21 22
        on right: 19 20 21 23
    func_block (61)
        on left: 23
        on right: 4
    declaration (62)
        on left: 24 25
        on right: 20
    decl_list (63)
        on left: 26 27
        on right: 24 25 26
    statements (64)
        on left: 28 29
        on right: 28 52 55 56
    statement (65)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 21 28 50 51 53
    assignment (66)
        on left: 42
        on right: 30 53
    break_statement (67)
        on left: 43
        on right: 37
    continue_statement (68)
        on left: 44
        on right: 38
    func_call (69)
        on left: 45
        on right: 39
    inc_dec (70)
        on left: 46 47 48 49
        on right: 40
    if_statement (71)
        on left: 50
        on right: 31
    while_statement (72)
        on left: 51
        on right: 32
    repeat_until_statement (73)
        on left: 52
        on right: 33
    for_statement (74)
        on left: 53
        on right: 34
    switch_statement (75)
        on left: 54
        on right: 35
    case_list (76)
        on left: 55 56 57
        on right: 54 55 56
    constant (77)
        on left: 58 59
        on right: 55
    return_statement (78)
        on left: 60 61
        on right: 23 36
    expression (79)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 25 42 50 51 52 53 54 60 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4
    CONST  shift, and go to state 5

    program     go to state 6
    functions   go to state 7
    function    go to state 8
    func_types  go to state 9


State 1

   10 func_types: INT •

    $default  reduce using rule 10 (func_types)


State 2

   11 func_types: FLOAT •

    $default  reduce using rule 11 (func_types)


State 3

   12 func_types: CHAR •

    $default  reduce using rule 12 (func_types)


State 4

   14 func_types: VOID •

    $default  reduce using rule 14 (func_types)


State 5

   13 func_types: CONST • func_types

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4
    CONST  shift, and go to state 5

    func_types  go to state 10


State 6

    0 $accept: program • $end

    $end  shift, and go to state 11


State 7

    1 program: functions •
    2 functions: functions • function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4
    CONST  shift, and go to state 5

    $default  reduce using rule 1 (program)

    function    go to state 12
    func_types  go to state 9


State 8

    3 functions: function •

    $default  reduce using rule 3 (functions)


State 9

    4 function: func_types • IDENTIFIER '(' params ')' func_block

    IDENTIFIER  shift, and go to state 13


State 10

   13 func_types: CONST func_types •

    $default  reduce using rule 13 (func_types)


State 11

    0 $accept: program $end •

    $default  accept


State 12

    2 functions: functions function •

    $default  reduce using rule 2 (functions)


State 13

    4 function: func_types IDENTIFIER • '(' params ')' func_block

    '('  shift, and go to state 14


State 14

    4 function: func_types IDENTIFIER '(' • params ')' func_block

    INT    shift, and go to state 15
    FLOAT  shift, and go to state 16
    CHAR   shift, and go to state 17
    CONST  shift, and go to state 18

    $default  reduce using rule 6 (params)

    params      go to state 19
    param_list  go to state 20
    param       go to state 21
    type        go to state 22


State 15

   15 type: INT •

    $default  reduce using rule 15 (type)


State 16

   16 type: FLOAT •

    $default  reduce using rule 16 (type)


State 17

   17 type: CHAR •

    $default  reduce using rule 17 (type)


State 18

   18 type: CONST • type

    INT    shift, and go to state 15
    FLOAT  shift, and go to state 16
    CHAR   shift, and go to state 17
    CONST  shift, and go to state 18

    type  go to state 23


State 19

    4 function: func_types IDENTIFIER '(' params • ')' func_block

    ')'  shift, and go to state 24


State 20

    5 params: param_list •
    7 param_list: param_list • ',' param

    ','  shift, and go to state 25

    $default  reduce using rule 5 (params)


State 21

    8 param_list: param •

    $default  reduce using rule 8 (param_list)


State 22

    9 param: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 26


State 23

   18 type: CONST type •

    $default  reduce using rule 18 (type)


State 24

    4 function: func_types IDENTIFIER '(' params ')' • func_block

    '{'  shift, and go to state 27

    func_block  go to state 28


State 25

    7 param_list: param_list ',' • param

    INT    shift, and go to state 15
    FLOAT  shift, and go to state 16
    CHAR   shift, and go to state 17
    CONST  shift, and go to state 18

    param  go to state 29
    type   go to state 22


State 26

    9 param: type IDENTIFIER •

    $default  reduce using rule 9 (param)


State 27

   23 func_block: '{' • block_content return_statement '}'

    $default  reduce using rule 22 (block_content)

    block_content  go to state 30


State 28

    4 function: func_types IDENTIFIER '(' params ')' func_block •

    $default  reduce using rule 4 (function)


State 29

    7 param_list: param_list ',' param •

    $default  reduce using rule 7 (param_list)


State 30

   20 block_content: block_content • declaration
   21              | block_content • statement
   23 func_block: '{' block_content • return_statement '}'

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INT         shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    CONST       shift, and go to state 18
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    type                    go to state 43
    block                   go to state 44
    declaration             go to state 45
    statement               go to state 46
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 57


State 31

   42 assignment: IDENTIFIER • '=' expression ';'
   45 func_call: IDENTIFIER • '(' ')' ';'
   46 inc_dec: IDENTIFIER • INC ';'
   47        | IDENTIFIER • DEC ';'

    INC  shift, and go to state 58
    DEC  shift, and go to state 59
    '('  shift, and go to state 60
    '='  shift, and go to state 61


State 32

   50 if_statement: IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 62


State 33

   51 while_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 63


State 34

   52 repeat_until_statement: REPEAT • statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 29 (statements)

    statements  go to state 64


State 35

   53 for_statement: FOR • '(' assignment expression ';' assignment ')' statement

    '('  shift, and go to state 65


State 36

   54 switch_statement: SWITCH • '(' expression ')' '{' case_list '}'

    '('  shift, and go to state 66


State 37

   43 break_statement: BREAK • ';'

    ';'  shift, and go to state 67


State 38

   44 continue_statement: CONTINUE • ';'

    ';'  shift, and go to state 68


State 39

   60 return_statement: RETURN • expression ';'
   61                 | RETURN • ';'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    ';'          shift, and go to state 73
    '('          shift, and go to state 74

    expression  go to state 75


State 40

   48 inc_dec: INC • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 76


State 41

   49 inc_dec: DEC • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 77


State 42

   19 block: '{' • block_content '}'

    $default  reduce using rule 22 (block_content)

    block_content  go to state 78


State 43

   24 declaration: type • decl_list ';'
   25            | type • decl_list '=' expression ';'

    IDENTIFIER  shift, and go to state 79

    decl_list  go to state 80


State 44

   41 statement: block •

    $default  reduce using rule 41 (statement)


State 45

   20 block_content: block_content declaration •

    $default  reduce using rule 20 (block_content)


State 46

   21 block_content: block_content statement •

    $default  reduce using rule 21 (block_content)


State 47

   30 statement: assignment •

    $default  reduce using rule 30 (statement)


State 48

   37 statement: break_statement •

    $default  reduce using rule 37 (statement)


State 49

   38 statement: continue_statement •

    $default  reduce using rule 38 (statement)


State 50

   39 statement: func_call •

    $default  reduce using rule 39 (statement)


State 51

   40 statement: inc_dec •

    $default  reduce using rule 40 (statement)


State 52

   31 statement: if_statement •

    $default  reduce using rule 31 (statement)


State 53

   32 statement: while_statement •

    $default  reduce using rule 32 (statement)


State 54

   33 statement: repeat_until_statement •

    $default  reduce using rule 33 (statement)


State 55

   34 statement: for_statement •

    $default  reduce using rule 34 (statement)


State 56

   35 statement: switch_statement •

    $default  reduce using rule 35 (statement)


State 57

   23 func_block: '{' block_content return_statement • '}'
   36 statement: return_statement •

    '}'  shift, and go to state 81

    $default  reduce using rule 36 (statement)


State 58

   46 inc_dec: IDENTIFIER INC • ';'

    ';'  shift, and go to state 82


State 59

   47 inc_dec: IDENTIFIER DEC • ';'

    ';'  shift, and go to state 83


State 60

   45 func_call: IDENTIFIER '(' • ')' ';'

    ')'  shift, and go to state 84


State 61

   42 assignment: IDENTIFIER '=' • expression ';'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 85


State 62

   50 if_statement: IF '(' • expression ')' statement ELSE statement

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 86


State 63

   51 while_statement: WHILE '(' • expression ')' statement

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 87


State 64

   28 statements: statements • statement
   52 repeat_until_statement: REPEAT statements • UNTIL '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    UNTIL       shift, and go to state 88
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    block                   go to state 44
    statement               go to state 89
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 65

   53 for_statement: FOR '(' • assignment expression ';' assignment ')' statement

    IDENTIFIER  shift, and go to state 91

    assignment  go to state 92


State 66

   54 switch_statement: SWITCH '(' • expression ')' '{' case_list '}'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 93


State 67

   43 break_statement: BREAK ';' •

    $default  reduce using rule 43 (break_statement)


State 68

   44 continue_statement: CONTINUE ';' •

    $default  reduce using rule 44 (continue_statement)


State 69

   81 expression: NUMBER •

    $default  reduce using rule 81 (expression)


State 70

   80 expression: IDENTIFIER •

    $default  reduce using rule 80 (expression)


State 71

   71 expression: NOT • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 94


State 72

   74 expression: BITWISE_NOT • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 95


State 73

   61 return_statement: RETURN ';' •

    $default  reduce using rule 61 (return_statement)


State 74

   79 expression: '(' • expression ')'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 96


State 75

   60 return_statement: RETURN expression • ';'
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ';'          shift, and go to state 110
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 76

   48 inc_dec: INC IDENTIFIER • ';'

    ';'  shift, and go to state 113


State 77

   49 inc_dec: DEC IDENTIFIER • ';'

    ';'  shift, and go to state 114


State 78

   19 block: '{' block_content • '}'
   20 block_content: block_content • declaration
   21              | block_content • statement

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INT         shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    CONST       shift, and go to state 18
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42
    '}'         shift, and go to state 115

    type                    go to state 43
    block                   go to state 44
    declaration             go to state 45
    statement               go to state 46
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 79

   27 decl_list: IDENTIFIER •

    $default  reduce using rule 27 (decl_list)


State 80

   24 declaration: type decl_list • ';'
   25            | type decl_list • '=' expression ';'
   26 decl_list: decl_list • ',' IDENTIFIER

    ';'  shift, and go to state 116
    ','  shift, and go to state 117
    '='  shift, and go to state 118


State 81

   23 func_block: '{' block_content return_statement '}' •

    $default  reduce using rule 23 (func_block)


State 82

   46 inc_dec: IDENTIFIER INC ';' •

    $default  reduce using rule 46 (inc_dec)


State 83

   47 inc_dec: IDENTIFIER DEC ';' •

    $default  reduce using rule 47 (inc_dec)


State 84

   45 func_call: IDENTIFIER '(' ')' • ';'

    ';'  shift, and go to state 119


State 85

   42 assignment: IDENTIFIER '=' expression • ';'
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ';'          shift, and go to state 120
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 86

   50 if_statement: IF '(' expression • ')' statement ELSE statement
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ')'          shift, and go to state 121
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 87

   51 while_statement: WHILE '(' expression • ')' statement
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ')'          shift, and go to state 122
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 88

   52 repeat_until_statement: REPEAT statements UNTIL • '(' expression ')' ';'

    '('  shift, and go to state 123


State 89

   28 statements: statements statement •

    $default  reduce using rule 28 (statements)


State 90

   36 statement: return_statement •

    $default  reduce using rule 36 (statement)


State 91

   42 assignment: IDENTIFIER • '=' expression ';'

    '='  shift, and go to state 61


State 92

   53 for_statement: FOR '(' assignment • expression ';' assignment ')' statement

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 124


State 93

   54 switch_statement: SWITCH '(' expression • ')' '{' case_list '}'
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ')'          shift, and go to state 125
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 94

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   71           | NOT expression •
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 71 (expression)]
    NEQ          [reduce using rule 71 (expression)]
    LE           [reduce using rule 71 (expression)]
    GE           [reduce using rule 71 (expression)]
    PLUS         [reduce using rule 71 (expression)]
    MINUS        [reduce using rule 71 (expression)]
    MULT         [reduce using rule 71 (expression)]
    DIV          [reduce using rule 71 (expression)]
    MOD          [reduce using rule 71 (expression)]
    AND          [reduce using rule 71 (expression)]
    OR           [reduce using rule 71 (expression)]
    BITWISE_AND  [reduce using rule 71 (expression)]
    BITWISE_OR   [reduce using rule 71 (expression)]
    '<'          [reduce using rule 71 (expression)]
    '>'          [reduce using rule 71 (expression)]
    $default     reduce using rule 71 (expression)


State 95

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   74           | BITWISE_NOT expression •
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 74 (expression)]
    NEQ          [reduce using rule 74 (expression)]
    LE           [reduce using rule 74 (expression)]
    GE           [reduce using rule 74 (expression)]
    PLUS         [reduce using rule 74 (expression)]
    MINUS        [reduce using rule 74 (expression)]
    MULT         [reduce using rule 74 (expression)]
    DIV          [reduce using rule 74 (expression)]
    MOD          [reduce using rule 74 (expression)]
    AND          [reduce using rule 74 (expression)]
    OR           [reduce using rule 74 (expression)]
    BITWISE_AND  [reduce using rule 74 (expression)]
    BITWISE_OR   [reduce using rule 74 (expression)]
    '<'          [reduce using rule 74 (expression)]
    '>'          [reduce using rule 74 (expression)]
    $default     reduce using rule 74 (expression)


State 96

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression
   79           | '(' expression • ')'

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ')'          shift, and go to state 126
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 97

   67 expression: expression EQ • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 127


State 98

   68 expression: expression NEQ • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 128


State 99

   77 expression: expression LE • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 129


State 100

   78 expression: expression GE • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 130


State 101

   62 expression: expression PLUS • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 131


State 102

   63 expression: expression MINUS • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 132


State 103

   64 expression: expression MULT • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 133


State 104

   65 expression: expression DIV • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 134


State 105

   66 expression: expression MOD • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 135


State 106

   69 expression: expression AND • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 136


State 107

   70 expression: expression OR • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 137


State 108

   72 expression: expression BITWISE_AND • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 138


State 109

   73 expression: expression BITWISE_OR • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 139


State 110

   60 return_statement: RETURN expression ';' •

    $default  reduce using rule 60 (return_statement)


State 111

   75 expression: expression '<' • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 140


State 112

   76 expression: expression '>' • expression

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 141


State 113

   48 inc_dec: INC IDENTIFIER ';' •

    $default  reduce using rule 48 (inc_dec)


State 114

   49 inc_dec: DEC IDENTIFIER ';' •

    $default  reduce using rule 49 (inc_dec)


State 115

   19 block: '{' block_content '}' •

    $default  reduce using rule 19 (block)


State 116

   24 declaration: type decl_list ';' •

    $default  reduce using rule 24 (declaration)


State 117

   26 decl_list: decl_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 118

   25 declaration: type decl_list '=' • expression ';'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 143


State 119

   45 func_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 45 (func_call)


State 120

   42 assignment: IDENTIFIER '=' expression ';' •

    $default  reduce using rule 42 (assignment)


State 121

   50 if_statement: IF '(' expression ')' • statement ELSE statement

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    block                   go to state 44
    statement               go to state 144
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 122

   51 while_statement: WHILE '(' expression ')' • statement

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    block                   go to state 44
    statement               go to state 145
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 123

   52 repeat_until_statement: REPEAT statements UNTIL '(' • expression ')' ';'

    NUMBER       shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    NOT          shift, and go to state 71
    BITWISE_NOT  shift, and go to state 72
    '('          shift, and go to state 74

    expression  go to state 146


State 124

   53 for_statement: FOR '(' assignment expression • ';' assignment ')' statement
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ';'          shift, and go to state 147
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 125

   54 switch_statement: SWITCH '(' expression ')' • '{' case_list '}'

    '{'  shift, and go to state 148


State 126

   79 expression: '(' expression ')' •

    $default  reduce using rule 79 (expression)


State 127

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   67           | expression EQ expression •
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 67 (expression)]
    OR           [reduce using rule 67 (expression)]
    BITWISE_AND  [reduce using rule 67 (expression)]
    BITWISE_OR   [reduce using rule 67 (expression)]
    $default     reduce using rule 67 (expression)


State 128

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   68           | expression NEQ expression •
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 68 (expression)]
    OR           [reduce using rule 68 (expression)]
    BITWISE_AND  [reduce using rule 68 (expression)]
    BITWISE_OR   [reduce using rule 68 (expression)]
    $default     reduce using rule 68 (expression)


State 129

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   77           | expression LE expression •
   78           | expression • GE expression

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 77 (expression)]
    OR           [reduce using rule 77 (expression)]
    BITWISE_AND  [reduce using rule 77 (expression)]
    BITWISE_OR   [reduce using rule 77 (expression)]
    $default     reduce using rule 77 (expression)


State 130

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression
   78           | expression GE expression •

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 78 (expression)]
    OR           [reduce using rule 78 (expression)]
    BITWISE_AND  [reduce using rule 78 (expression)]
    BITWISE_OR   [reduce using rule 78 (expression)]
    $default     reduce using rule 78 (expression)


State 131

   62 expression: expression • PLUS expression
   62           | expression PLUS expression •
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    AND          [reduce using rule 62 (expression)]
    OR           [reduce using rule 62 (expression)]
    BITWISE_AND  [reduce using rule 62 (expression)]
    BITWISE_OR   [reduce using rule 62 (expression)]
    $default     reduce using rule 62 (expression)


State 132

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   63           | expression MINUS expression •
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    AND          [reduce using rule 63 (expression)]
    OR           [reduce using rule 63 (expression)]
    BITWISE_AND  [reduce using rule 63 (expression)]
    BITWISE_OR   [reduce using rule 63 (expression)]
    $default     reduce using rule 63 (expression)


State 133

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   64           | expression MULT expression •
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    AND          [reduce using rule 64 (expression)]
    OR           [reduce using rule 64 (expression)]
    BITWISE_AND  [reduce using rule 64 (expression)]
    BITWISE_OR   [reduce using rule 64 (expression)]
    $default     reduce using rule 64 (expression)


State 134

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   65           | expression DIV expression •
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    AND          [reduce using rule 65 (expression)]
    OR           [reduce using rule 65 (expression)]
    BITWISE_AND  [reduce using rule 65 (expression)]
    BITWISE_OR   [reduce using rule 65 (expression)]
    $default     reduce using rule 65 (expression)


State 135

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   66           | expression MOD expression •
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    AND          [reduce using rule 66 (expression)]
    OR           [reduce using rule 66 (expression)]
    BITWISE_AND  [reduce using rule 66 (expression)]
    BITWISE_OR   [reduce using rule 66 (expression)]
    $default     reduce using rule 66 (expression)


State 136

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   69           | expression AND expression •
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 69 (expression)]
    NEQ          [reduce using rule 69 (expression)]
    LE           [reduce using rule 69 (expression)]
    GE           [reduce using rule 69 (expression)]
    PLUS         [reduce using rule 69 (expression)]
    MINUS        [reduce using rule 69 (expression)]
    MULT         [reduce using rule 69 (expression)]
    DIV          [reduce using rule 69 (expression)]
    MOD          [reduce using rule 69 (expression)]
    AND          [reduce using rule 69 (expression)]
    OR           [reduce using rule 69 (expression)]
    BITWISE_AND  [reduce using rule 69 (expression)]
    BITWISE_OR   [reduce using rule 69 (expression)]
    '<'          [reduce using rule 69 (expression)]
    '>'          [reduce using rule 69 (expression)]
    $default     reduce using rule 69 (expression)


State 137

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   70           | expression OR expression •
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 70 (expression)]
    NEQ          [reduce using rule 70 (expression)]
    LE           [reduce using rule 70 (expression)]
    GE           [reduce using rule 70 (expression)]
    PLUS         [reduce using rule 70 (expression)]
    MINUS        [reduce using rule 70 (expression)]
    MULT         [reduce using rule 70 (expression)]
    DIV          [reduce using rule 70 (expression)]
    MOD          [reduce using rule 70 (expression)]
    AND          [reduce using rule 70 (expression)]
    OR           [reduce using rule 70 (expression)]
    BITWISE_AND  [reduce using rule 70 (expression)]
    BITWISE_OR   [reduce using rule 70 (expression)]
    '<'          [reduce using rule 70 (expression)]
    '>'          [reduce using rule 70 (expression)]
    $default     reduce using rule 70 (expression)


State 138

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   72           | expression BITWISE_AND expression •
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 72 (expression)]
    NEQ          [reduce using rule 72 (expression)]
    LE           [reduce using rule 72 (expression)]
    GE           [reduce using rule 72 (expression)]
    PLUS         [reduce using rule 72 (expression)]
    MINUS        [reduce using rule 72 (expression)]
    MULT         [reduce using rule 72 (expression)]
    DIV          [reduce using rule 72 (expression)]
    MOD          [reduce using rule 72 (expression)]
    AND          [reduce using rule 72 (expression)]
    OR           [reduce using rule 72 (expression)]
    BITWISE_AND  [reduce using rule 72 (expression)]
    BITWISE_OR   [reduce using rule 72 (expression)]
    '<'          [reduce using rule 72 (expression)]
    '>'          [reduce using rule 72 (expression)]
    $default     reduce using rule 72 (expression)


State 139

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   73           | expression BITWISE_OR expression •
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112

    EQ           [reduce using rule 73 (expression)]
    NEQ          [reduce using rule 73 (expression)]
    LE           [reduce using rule 73 (expression)]
    GE           [reduce using rule 73 (expression)]
    PLUS         [reduce using rule 73 (expression)]
    MINUS        [reduce using rule 73 (expression)]
    MULT         [reduce using rule 73 (expression)]
    DIV          [reduce using rule 73 (expression)]
    MOD          [reduce using rule 73 (expression)]
    AND          [reduce using rule 73 (expression)]
    OR           [reduce using rule 73 (expression)]
    BITWISE_AND  [reduce using rule 73 (expression)]
    BITWISE_OR   [reduce using rule 73 (expression)]
    '<'          [reduce using rule 73 (expression)]
    '>'          [reduce using rule 73 (expression)]
    $default     reduce using rule 73 (expression)


State 140

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   75           | expression '<' expression •
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 75 (expression)]
    OR           [reduce using rule 75 (expression)]
    BITWISE_AND  [reduce using rule 75 (expression)]
    BITWISE_OR   [reduce using rule 75 (expression)]
    $default     reduce using rule 75 (expression)


State 141

   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   76           | expression '>' expression •
   77           | expression • LE expression
   78           | expression • GE expression

    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 76 (expression)]
    OR           [reduce using rule 76 (expression)]
    BITWISE_AND  [reduce using rule 76 (expression)]
    BITWISE_OR   [reduce using rule 76 (expression)]
    $default     reduce using rule 76 (expression)


State 142

   26 decl_list: decl_list ',' IDENTIFIER •

    $default  reduce using rule 26 (decl_list)


State 143

   25 declaration: type decl_list '=' expression • ';'
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ';'          shift, and go to state 149
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 144

   50 if_statement: IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 150


State 145

   51 while_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 51 (while_statement)


State 146

   52 repeat_until_statement: REPEAT statements UNTIL '(' expression • ')' ';'
   62 expression: expression • PLUS expression
   63           | expression • MINUS expression
   64           | expression • MULT expression
   65           | expression • DIV expression
   66           | expression • MOD expression
   67           | expression • EQ expression
   68           | expression • NEQ expression
   69           | expression • AND expression
   70           | expression • OR expression
   72           | expression • BITWISE_AND expression
   73           | expression • BITWISE_OR expression
   75           | expression • '<' expression
   76           | expression • '>' expression
   77           | expression • LE expression
   78           | expression • GE expression

    EQ           shift, and go to state 97
    NEQ          shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    PLUS         shift, and go to state 101
    MINUS        shift, and go to state 102
    MULT         shift, and go to state 103
    DIV          shift, and go to state 104
    MOD          shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    BITWISE_AND  shift, and go to state 108
    BITWISE_OR   shift, and go to state 109
    ')'          shift, and go to state 151
    '<'          shift, and go to state 111
    '>'          shift, and go to state 112


State 147

   53 for_statement: FOR '(' assignment expression ';' • assignment ')' statement

    IDENTIFIER  shift, and go to state 91

    assignment  go to state 152


State 148

   54 switch_statement: SWITCH '(' expression ')' '{' • case_list '}'

    $default  reduce using rule 57 (case_list)

    case_list  go to state 153


State 149

   25 declaration: type decl_list '=' expression ';' •

    $default  reduce using rule 25 (declaration)


State 150

   50 if_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    block                   go to state 44
    statement               go to state 154
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 151

   52 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' • ';'

    ';'  shift, and go to state 155


State 152

   53 for_statement: FOR '(' assignment expression ';' assignment • ')' statement

    ')'  shift, and go to state 156


State 153

   54 switch_statement: SWITCH '(' expression ')' '{' case_list • '}'
   55 case_list: case_list • CASE constant ':' statements
   56          | case_list • DEFAULT ':' statements

    CASE     shift, and go to state 157
    DEFAULT  shift, and go to state 158
    '}'      shift, and go to state 159


State 154

   50 if_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 50 (if_statement)


State 155

   52 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';' •

    $default  reduce using rule 52 (repeat_until_statement)


State 156

   53 for_statement: FOR '(' assignment expression ';' assignment ')' • statement

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    block                   go to state 44
    statement               go to state 160
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 157

   55 case_list: case_list CASE • constant ':' statements

    NUMBER      shift, and go to state 161
    IDENTIFIER  shift, and go to state 162

    constant  go to state 163


State 158

   56 case_list: case_list DEFAULT • ':' statements

    ':'  shift, and go to state 164


State 159

   54 switch_statement: SWITCH '(' expression ')' '{' case_list '}' •

    $default  reduce using rule 54 (switch_statement)


State 160

   53 for_statement: FOR '(' assignment expression ';' assignment ')' statement •

    $default  reduce using rule 53 (for_statement)


State 161

   58 constant: NUMBER •

    $default  reduce using rule 58 (constant)


State 162

   59 constant: IDENTIFIER •

    $default  reduce using rule 59 (constant)


State 163

   55 case_list: case_list CASE constant • ':' statements

    ':'  shift, and go to state 165


State 164

   56 case_list: case_list DEFAULT ':' • statements

    $default  reduce using rule 29 (statements)

    statements  go to state 166


State 165

   55 case_list: case_list CASE constant ':' • statements

    $default  reduce using rule 29 (statements)

    statements  go to state 167


State 166

   28 statements: statements • statement
   56 case_list: case_list DEFAULT ':' statements •

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    $default  reduce using rule 56 (case_list)

    block                   go to state 44
    statement               go to state 89
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90


State 167

   28 statements: statements • statement
   55 case_list: case_list CASE constant ':' statements •

    IDENTIFIER  shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    REPEAT      shift, and go to state 34
    FOR         shift, and go to state 35
    SWITCH      shift, and go to state 36
    BREAK       shift, and go to state 37
    CONTINUE    shift, and go to state 38
    RETURN      shift, and go to state 39
    INC         shift, and go to state 40
    DEC         shift, and go to state 41
    '{'         shift, and go to state 42

    $default  reduce using rule 55 (case_list)

    block                   go to state 44
    statement               go to state 89
    assignment              go to state 47
    break_statement         go to state 48
    continue_statement      go to state 49
    func_call               go to state 50
    inc_dec                 go to state 51
    if_statement            go to state 52
    while_statement         go to state 53
    repeat_until_statement  go to state 54
    for_statement           go to state 55
    switch_statement        go to state 56
    return_statement        go to state 90
