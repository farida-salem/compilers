Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 functions

    3 functions: functions function
    4          | function

    5 $@2: ε

    6 function: func_types IDENTIFIER '(' params ')' $@2 func_block

    7 params: param_list
    8       | ε

    9 param_list: param_list ',' param
   10           | param

   11 param: type IDENTIFIER

   12 func_types: INT
   13           | FLOAT
   14           | CHAR
   15           | STRING
   16           | CONST func_types
   17           | VOID

   18 type: INT
   19     | FLOAT
   20     | CHAR
   21     | STRING
   22     | CONST type

   23 decl_list: IDENTIFIER
   24          | decl_list ',' IDENTIFIER

   25 declaration: type decl_list ';'
   26            | type decl_list '=' expression ';'
   27            | type error ';'

   28 $@3: ε

   29 block: '{' $@3 block_content '}'

   30 block_content: block_content declaration
   31              | block_content statement
   32              | ε

   33 $@4: ε

   34 $@5: ε

   35 func_block: '{' $@4 block_content return_statement $@5 '}'

   36 statements: statements statement
   37           | ε

   38 statement: assignment
   39          | if_statement
   40          | while_statement
   41          | repeat_until_statement
   42          | for_statement
   43          | switch_statement
   44          | return_statement
   45          | break_statement
   46          | inc_dec_statement
   47          | func_call
   48          | block
   49          | error ';'

   50 assignment: IDENTIFIER '=' expression ';'
   51           | IDENTIFIER '=' error ';'

   52 break_statement: BREAK ';'

   53 inc_dec_statement: IDENTIFIER INC ';'
   54                  | IDENTIFIER DEC ';'

   55 func_call: IDENTIFIER '(' ')' ';'
   56          | IDENTIFIER '(' arg_list ')' ';'

   57 arg_list: expression
   58         | arg_list ',' expression

   59 if_statement: if_start statement

   60 $@6: ε

   61 if_statement: if_start statement ELSE $@6 statement

   62 if_start: IF '(' expression ')'

   63 $@7: ε

   64 $@8: ε

   65 while_statement: WHILE '(' $@7 expression ')' $@8 statement

   66 $@9: ε

   67 repeat_until_statement: REPEAT $@9 statements UNTIL '(' expression ')' ';'

   68 $@10: ε

   69 $@11: ε

   70 $@12: ε

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 for_update_expr ')' $@12 statement

   72 for_start: declaration
   73          | assignment

   74 for_update_expr: expression
   75                | IDENTIFIER '=' expression
   76                | ε

   77 @13: ε

   78 switch_statement: SWITCH '(' expression ')' '{' @13 case_list '}'

   79 @14: ε

   80 case_list: case_list CASE constant ':' @14 statements
   81          | case_list DEFAULT ':' statements
   82          | ε

   83 constant: NUMBER
   84         | CHAR_LITERAL
   85         | IDENTIFIER

   86 return_statement: RETURN expression ';'
   87                 | RETURN ';'

   88 expression: expression PLUS expression
   89           | expression MINUS expression
   90           | expression MULT expression
   91           | expression DIV expression
   92           | expression MOD expression
   93           | MINUS expression
   94           | expression EQ expression
   95           | expression NEQ expression
   96           | expression AND expression
   97           | expression OR expression
   98           | NOT expression
   99           | expression '<' expression
  100           | expression '>' expression
  101           | expression LE expression
  102           | expression GE expression
  103           | primary_expression

  104 primary_expression: IDENTIFIER
  105                   | IDENTIFIER INC
  106                   | IDENTIFIER DEC
  107                   | IDENTIFIER '(' ')'
  108                   | IDENTIFIER '(' arg_list ')'
  109                   | NUMBER
  110                   | FLOAT_LITERAL
  111                   | CHAR_LITERAL
  112                   | STRING_LITERAL
  113                   | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 55 56 62 65 67 71 78 107 108 113
    ')' (41) 6 55 56 62 65 67 71 78 107 108 113
    ',' (44) 9 24 58
    ':' (58) 80 81
    ';' (59) 25 26 27 49 50 51 52 53 54 55 56 67 71 86 87
    '<' (60) 99
    '=' (61) 26 50 51 75
    '>' (62) 100
    '{' (123) 29 35 78
    '}' (125) 29 35 78
    error (256) 27 49 51
    NUMBER <num> (258) 83 109
    CHAR_LITERAL <num> (259) 84 111
    FLOAT_LITERAL <fnum> (260) 110
    IDENTIFIER <id> (261) 6 11 23 24 50 51 53 54 55 56 75 85 104 105 106 107 108
    STRING_LITERAL <id> (262) 112
    IF (263) 62
    ELSE (264) 61
    WHILE (265) 65
    REPEAT (266) 67
    UNTIL (267) 67
    FOR (268) 71
    SWITCH (269) 78
    CASE (270) 80
    DEFAULT (271) 81
    BREAK (272) 52
    RETURN (273) 86 87
    INT (274) 12 18
    FLOAT (275) 13 19
    CHAR (276) 14 20
    STRING (277) 15 21
    VOID (278) 17
    CONST (279) 16 22
    EQ (280) 94
    NEQ (281) 95
    LE (282) 101
    GE (283) 102
    PLUS (284) 88
    MINUS (285) 89 93
    MULT (286) 90
    DIV (287) 91
    MOD (288) 92
    AND (289) 96
    OR (290) 97
    NOT (291) 98
    INC (292) 53 105
    DEC (293) 54 106
    NO_ELSE (294)
    UMINUS (295)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 2
        on right: 0
    $@1 (53)
        on left: 1
        on right: 2
    functions (54)
        on left: 3 4
        on right: 2 3
    function (55)
        on left: 6
        on right: 3 4
    $@2 (56)
        on left: 5
        on right: 6
    params (57)
        on left: 7 8
        on right: 6
    param_list <param> (58)
        on left: 9 10
        on right: 7 9
    param <param> (59)
        on left: 11
        on right: 9 10
    func_types <immutability> (60)
        on left: 12 13 14 15 16 17
        on right: 6 16
    type <immutability> (61)
        on left: 18 19 20 21 22
        on right: 11 22 25 26 27
    decl_list <idlist> (62)
        on left: 23 24
        on right: 24 25 26
    declaration (63)
        on left: 25 26 27
        on right: 30 72
    block (64)
        on left: 29
        on right: 48
    $@3 (65)
        on left: 28
        on right: 29
    block_content (66)
        on left: 30 31 32
        on right: 29 30 31 35
    func_block (67)
        on left: 35
        on right: 6
    $@4 (68)
        on left: 33
        on right: 35
    $@5 (69)
        on left: 34
        on right: 35
    statements (70)
        on left: 36 37
        on right: 36 67 80 81
    statement (71)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 31 36 59 61 65 71
    assignment (72)
        on left: 50 51
        on right: 38 73
    break_statement (73)
        on left: 52
        on right: 45
    inc_dec_statement (74)
        on left: 53 54
        on right: 46
    func_call (75)
        on left: 55 56
        on right: 47
    arg_list <num> (76)
        on left: 57 58
        on right: 56 58 108
    if_statement (77)
        on left: 59 61
        on right: 39
    $@6 (78)
        on left: 60
        on right: 61
    if_start (79)
        on left: 62
        on right: 59 61
    while_statement (80)
        on left: 65
        on right: 40
    $@7 (81)
        on left: 63
        on right: 65
    $@8 (82)
        on left: 64
        on right: 65
    repeat_until_statement (83)
        on left: 67
        on right: 41
    $@9 (84)
        on left: 66
        on right: 67
    for_statement (85)
        on left: 71
        on right: 42
    $@10 (86)
        on left: 68
        on right: 71
    $@11 (87)
        on left: 69
        on right: 71
    $@12 (88)
        on left: 70
        on right: 71
    for_start (89)
        on left: 72 73
        on right: 71
    for_update_expr (90)
        on left: 74 75 76
        on right: 71
    switch_statement (91)
        on left: 78
        on right: 43
    @13 (92)
        on left: 77
        on right: 78
    case_list (93)
        on left: 80 81 82
        on right: 78 80 81
    @14 (94)
        on left: 79
        on right: 80
    constant <expr> (95)
        on left: 83 84 85
        on right: 80
    return_statement (96)
        on left: 86 87
        on right: 35 44
    expression <expr> (97)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
        on right: 26 50 57 58 62 65 67 71 74 75 78 86 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 113
    primary_expression <expr> (98)
        on left: 104 105 106 107 108 109 110 111 112 113
        on right: 103


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • functions

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    functions   go to state 10
    function    go to state 11
    func_types  go to state 12


State 3

    0 $accept: program $end •

    $default  accept


State 4

   12 func_types: INT •

    $default  reduce using rule 12 (func_types)


State 5

   13 func_types: FLOAT •

    $default  reduce using rule 13 (func_types)


State 6

   14 func_types: CHAR •

    $default  reduce using rule 14 (func_types)


State 7

   15 func_types: STRING •

    $default  reduce using rule 15 (func_types)


State 8

   17 func_types: VOID •

    $default  reduce using rule 17 (func_types)


State 9

   16 func_types: CONST • func_types

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    func_types  go to state 13


State 10

    2 program: $@1 functions •
    3 functions: functions • function

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    $default  reduce using rule 2 (program)

    function    go to state 14
    func_types  go to state 12


State 11

    4 functions: function •

    $default  reduce using rule 4 (functions)


State 12

    6 function: func_types • IDENTIFIER '(' params ')' $@2 func_block

    IDENTIFIER  shift, and go to state 15


State 13

   16 func_types: CONST func_types •

    $default  reduce using rule 16 (func_types)


State 14

    3 functions: functions function •

    $default  reduce using rule 3 (functions)


State 15

    6 function: func_types IDENTIFIER • '(' params ')' $@2 func_block

    '('  shift, and go to state 16


State 16

    6 function: func_types IDENTIFIER '(' • params ')' $@2 func_block

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    $default  reduce using rule 8 (params)

    params      go to state 22
    param_list  go to state 23
    param       go to state 24
    type        go to state 25


State 17

   18 type: INT •

    $default  reduce using rule 18 (type)


State 18

   19 type: FLOAT •

    $default  reduce using rule 19 (type)


State 19

   20 type: CHAR •

    $default  reduce using rule 20 (type)


State 20

   21 type: STRING •

    $default  reduce using rule 21 (type)


State 21

   22 type: CONST • type

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    type  go to state 26


State 22

    6 function: func_types IDENTIFIER '(' params • ')' $@2 func_block

    ')'  shift, and go to state 27


State 23

    7 params: param_list •
    9 param_list: param_list • ',' param

    ','  shift, and go to state 28

    $default  reduce using rule 7 (params)


State 24

   10 param_list: param •

    $default  reduce using rule 10 (param_list)


State 25

   11 param: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 29


State 26

   22 type: CONST type •

    $default  reduce using rule 22 (type)


State 27

    6 function: func_types IDENTIFIER '(' params ')' • $@2 func_block

    $default  reduce using rule 5 ($@2)

    $@2  go to state 30


State 28

    9 param_list: param_list ',' • param

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    param  go to state 31
    type   go to state 25


State 29

   11 param: type IDENTIFIER •

    $default  reduce using rule 11 (param)


State 30

    6 function: func_types IDENTIFIER '(' params ')' $@2 • func_block

    '{'  shift, and go to state 32

    func_block  go to state 33


State 31

    9 param_list: param_list ',' param •

    $default  reduce using rule 9 (param_list)


State 32

   35 func_block: '{' • $@4 block_content return_statement $@5 '}'

    $default  reduce using rule 33 ($@4)

    $@4  go to state 34


State 33

    6 function: func_types IDENTIFIER '(' params ')' $@2 func_block •

    $default  reduce using rule 6 (function)


State 34

   35 func_block: '{' $@4 • block_content return_statement $@5 '}'

    $default  reduce using rule 32 (block_content)

    block_content  go to state 35


State 35

   30 block_content: block_content • declaration
   31              | block_content • statement
   35 func_block: '{' $@4 block_content • return_statement $@5 '}'

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21
    '{'         shift, and go to state 45

    type                    go to state 46
    declaration             go to state 47
    block                   go to state 48
    statement               go to state 49
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 60


State 36

   49 statement: error • ';'

    ';'  shift, and go to state 61


State 37

   50 assignment: IDENTIFIER • '=' expression ';'
   51           | IDENTIFIER • '=' error ';'
   53 inc_dec_statement: IDENTIFIER • INC ';'
   54                  | IDENTIFIER • DEC ';'
   55 func_call: IDENTIFIER • '(' ')' ';'
   56          | IDENTIFIER • '(' arg_list ')' ';'

    INC  shift, and go to state 62
    DEC  shift, and go to state 63
    '('  shift, and go to state 64
    '='  shift, and go to state 65


State 38

   62 if_start: IF • '(' expression ')'

    '('  shift, and go to state 66


State 39

   65 while_statement: WHILE • '(' $@7 expression ')' $@8 statement

    '('  shift, and go to state 67


State 40

   67 repeat_until_statement: REPEAT • $@9 statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 66 ($@9)

    $@9  go to state 68


State 41

   71 for_statement: FOR • '(' for_start $@10 expression ';' $@11 for_update_expr ')' $@12 statement

    '('  shift, and go to state 69


State 42

   78 switch_statement: SWITCH • '(' expression ')' '{' @13 case_list '}'

    '('  shift, and go to state 70


State 43

   52 break_statement: BREAK • ';'

    ';'  shift, and go to state 71


State 44

   86 return_statement: RETURN • expression ';'
   87                 | RETURN • ';'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    ';'             shift, and go to state 79
    '('             shift, and go to state 80

    expression          go to state 81
    primary_expression  go to state 82


State 45

   29 block: '{' • $@3 block_content '}'

    $default  reduce using rule 28 ($@3)

    $@3  go to state 83


State 46

   25 declaration: type • decl_list ';'
   26            | type • decl_list '=' expression ';'
   27            | type • error ';'

    error       shift, and go to state 84
    IDENTIFIER  shift, and go to state 85

    decl_list  go to state 86


State 47

   30 block_content: block_content declaration •

    $default  reduce using rule 30 (block_content)


State 48

   48 statement: block •

    $default  reduce using rule 48 (statement)


State 49

   31 block_content: block_content statement •

    $default  reduce using rule 31 (block_content)


State 50

   38 statement: assignment •

    $default  reduce using rule 38 (statement)


State 51

   45 statement: break_statement •

    $default  reduce using rule 45 (statement)


State 52

   46 statement: inc_dec_statement •

    $default  reduce using rule 46 (statement)


State 53

   47 statement: func_call •

    $default  reduce using rule 47 (statement)


State 54

   39 statement: if_statement •

    $default  reduce using rule 39 (statement)


State 55

   59 if_statement: if_start • statement
   61             | if_start • statement ELSE $@6 statement

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 87
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 56

   40 statement: while_statement •

    $default  reduce using rule 40 (statement)


State 57

   41 statement: repeat_until_statement •

    $default  reduce using rule 41 (statement)


State 58

   42 statement: for_statement •

    $default  reduce using rule 42 (statement)


State 59

   43 statement: switch_statement •

    $default  reduce using rule 43 (statement)


State 60

   35 func_block: '{' $@4 block_content return_statement • $@5 '}'
   44 statement: return_statement •

    '}'       reduce using rule 34 ($@5)
    $default  reduce using rule 44 (statement)

    $@5  go to state 89


State 61

   49 statement: error ';' •

    $default  reduce using rule 49 (statement)


State 62

   53 inc_dec_statement: IDENTIFIER INC • ';'

    ';'  shift, and go to state 90


State 63

   54 inc_dec_statement: IDENTIFIER DEC • ';'

    ';'  shift, and go to state 91


State 64

   55 func_call: IDENTIFIER '(' • ')' ';'
   56          | IDENTIFIER '(' • arg_list ')' ';'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80
    ')'             shift, and go to state 92

    arg_list            go to state 93
    expression          go to state 94
    primary_expression  go to state 82


State 65

   50 assignment: IDENTIFIER '=' • expression ';'
   51           | IDENTIFIER '=' • error ';'

    error           shift, and go to state 95
    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 96
    primary_expression  go to state 82


State 66

   62 if_start: IF '(' • expression ')'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 97
    primary_expression  go to state 82


State 67

   65 while_statement: WHILE '(' • $@7 expression ')' $@8 statement

    $default  reduce using rule 63 ($@7)

    $@7  go to state 98


State 68

   67 repeat_until_statement: REPEAT $@9 • statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 37 (statements)

    statements  go to state 99


State 69

   71 for_statement: FOR '(' • for_start $@10 expression ';' $@11 for_update_expr ')' $@12 statement

    IDENTIFIER  shift, and go to state 100
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21

    type         go to state 46
    declaration  go to state 101
    assignment   go to state 102
    for_start    go to state 103


State 70

   78 switch_statement: SWITCH '(' • expression ')' '{' @13 case_list '}'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 104
    primary_expression  go to state 82


State 71

   52 break_statement: BREAK ';' •

    $default  reduce using rule 52 (break_statement)


State 72

  109 primary_expression: NUMBER •

    $default  reduce using rule 109 (primary_expression)


State 73

  111 primary_expression: CHAR_LITERAL •

    $default  reduce using rule 111 (primary_expression)


State 74

  110 primary_expression: FLOAT_LITERAL •

    $default  reduce using rule 110 (primary_expression)


State 75

  104 primary_expression: IDENTIFIER •
  105                   | IDENTIFIER • INC
  106                   | IDENTIFIER • DEC
  107                   | IDENTIFIER • '(' ')'
  108                   | IDENTIFIER • '(' arg_list ')'

    INC  shift, and go to state 105
    DEC  shift, and go to state 106
    '('  shift, and go to state 107

    $default  reduce using rule 104 (primary_expression)


State 76

  112 primary_expression: STRING_LITERAL •

    $default  reduce using rule 112 (primary_expression)


State 77

   93 expression: MINUS • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 108
    primary_expression  go to state 82


State 78

   98 expression: NOT • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 109
    primary_expression  go to state 82


State 79

   87 return_statement: RETURN ';' •

    $default  reduce using rule 87 (return_statement)


State 80

  113 primary_expression: '(' • expression ')'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 110
    primary_expression  go to state 82


State 81

   86 return_statement: RETURN expression • ';'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ';'    shift, and go to state 122
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 82

  103 expression: primary_expression •

    $default  reduce using rule 103 (expression)


State 83

   29 block: '{' $@3 • block_content '}'

    $default  reduce using rule 32 (block_content)

    block_content  go to state 125


State 84

   27 declaration: type error • ';'

    ';'  shift, and go to state 126


State 85

   23 decl_list: IDENTIFIER •

    $default  reduce using rule 23 (decl_list)


State 86

   24 decl_list: decl_list • ',' IDENTIFIER
   25 declaration: type decl_list • ';'
   26            | type decl_list • '=' expression ';'

    ';'  shift, and go to state 127
    ','  shift, and go to state 128
    '='  shift, and go to state 129


State 87

   59 if_statement: if_start statement •
   61             | if_start statement • ELSE $@6 statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 59 (if_statement)


State 88

   44 statement: return_statement •

    $default  reduce using rule 44 (statement)


State 89

   35 func_block: '{' $@4 block_content return_statement $@5 • '}'

    '}'  shift, and go to state 131


State 90

   53 inc_dec_statement: IDENTIFIER INC ';' •

    $default  reduce using rule 53 (inc_dec_statement)


State 91

   54 inc_dec_statement: IDENTIFIER DEC ';' •

    $default  reduce using rule 54 (inc_dec_statement)


State 92

   55 func_call: IDENTIFIER '(' ')' • ';'

    ';'  shift, and go to state 132


State 93

   56 func_call: IDENTIFIER '(' arg_list • ')' ';'
   58 arg_list: arg_list • ',' expression

    ','  shift, and go to state 133
    ')'  shift, and go to state 134


State 94

   57 arg_list: expression •
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 57 (arg_list)


State 95

   51 assignment: IDENTIFIER '=' error • ';'

    ';'  shift, and go to state 135


State 96

   50 assignment: IDENTIFIER '=' expression • ';'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ';'    shift, and go to state 136
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 97

   62 if_start: IF '(' expression • ')'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ')'    shift, and go to state 137
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 98

   65 while_statement: WHILE '(' $@7 • expression ')' $@8 statement

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 138
    primary_expression  go to state 82


State 99

   36 statements: statements • statement
   67 repeat_until_statement: REPEAT $@9 statements • UNTIL '(' expression ')' ';'

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    UNTIL       shift, and go to state 139
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 140
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 100

   50 assignment: IDENTIFIER • '=' expression ';'
   51           | IDENTIFIER • '=' error ';'

    '='  shift, and go to state 65


State 101

   72 for_start: declaration •

    $default  reduce using rule 72 (for_start)


State 102

   73 for_start: assignment •

    $default  reduce using rule 73 (for_start)


State 103

   71 for_statement: FOR '(' for_start • $@10 expression ';' $@11 for_update_expr ')' $@12 statement

    $default  reduce using rule 68 ($@10)

    $@10  go to state 141


State 104

   78 switch_statement: SWITCH '(' expression • ')' '{' @13 case_list '}'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ')'    shift, and go to state 142
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 105

  105 primary_expression: IDENTIFIER INC •

    $default  reduce using rule 105 (primary_expression)


State 106

  106 primary_expression: IDENTIFIER DEC •

    $default  reduce using rule 106 (primary_expression)


State 107

  107 primary_expression: IDENTIFIER '(' • ')'
  108                   | IDENTIFIER '(' • arg_list ')'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80
    ')'             shift, and go to state 143

    arg_list            go to state 144
    expression          go to state 94
    primary_expression  go to state 82


State 108

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   93           | MINUS expression •
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    $default  reduce using rule 93 (expression)


State 109

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   98           | NOT expression •
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    $default  reduce using rule 98 (expression)


State 110

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression
  113 primary_expression: '(' expression • ')'

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ')'    shift, and go to state 145
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 111

   94 expression: expression EQ • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 146
    primary_expression  go to state 82


State 112

   95 expression: expression NEQ • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 147
    primary_expression  go to state 82


State 113

  101 expression: expression LE • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 148
    primary_expression  go to state 82


State 114

  102 expression: expression GE • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 149
    primary_expression  go to state 82


State 115

   88 expression: expression PLUS • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 150
    primary_expression  go to state 82


State 116

   89 expression: expression MINUS • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 151
    primary_expression  go to state 82


State 117

   90 expression: expression MULT • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 152
    primary_expression  go to state 82


State 118

   91 expression: expression DIV • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 153
    primary_expression  go to state 82


State 119

   92 expression: expression MOD • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 154
    primary_expression  go to state 82


State 120

   96 expression: expression AND • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 155
    primary_expression  go to state 82


State 121

   97 expression: expression OR • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 156
    primary_expression  go to state 82


State 122

   86 return_statement: RETURN expression ';' •

    $default  reduce using rule 86 (return_statement)


State 123

   99 expression: expression '<' • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 157
    primary_expression  go to state 82


State 124

  100 expression: expression '>' • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 158
    primary_expression  go to state 82


State 125

   29 block: '{' $@3 block_content • '}'
   30 block_content: block_content • declaration
   31              | block_content • statement

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21
    '{'         shift, and go to state 45
    '}'         shift, and go to state 159

    type                    go to state 46
    declaration             go to state 47
    block                   go to state 48
    statement               go to state 49
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 126

   27 declaration: type error ';' •

    $default  reduce using rule 27 (declaration)


State 127

   25 declaration: type decl_list ';' •

    $default  reduce using rule 25 (declaration)


State 128

   24 decl_list: decl_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 160


State 129

   26 declaration: type decl_list '=' • expression ';'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 161
    primary_expression  go to state 82


State 130

   61 if_statement: if_start statement ELSE • $@6 statement

    $default  reduce using rule 60 ($@6)

    $@6  go to state 162


State 131

   35 func_block: '{' $@4 block_content return_statement $@5 '}' •

    $default  reduce using rule 35 (func_block)


State 132

   55 func_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 55 (func_call)


State 133

   58 arg_list: arg_list ',' • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 163
    primary_expression  go to state 82


State 134

   56 func_call: IDENTIFIER '(' arg_list ')' • ';'

    ';'  shift, and go to state 164


State 135

   51 assignment: IDENTIFIER '=' error ';' •

    $default  reduce using rule 51 (assignment)


State 136

   50 assignment: IDENTIFIER '=' expression ';' •

    $default  reduce using rule 50 (assignment)


State 137

   62 if_start: IF '(' expression ')' •

    $default  reduce using rule 62 (if_start)


State 138

   65 while_statement: WHILE '(' $@7 expression • ')' $@8 statement
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ')'    shift, and go to state 165
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 139

   67 repeat_until_statement: REPEAT $@9 statements UNTIL • '(' expression ')' ';'

    '('  shift, and go to state 166


State 140

   36 statements: statements statement •

    $default  reduce using rule 36 (statements)


State 141

   71 for_statement: FOR '(' for_start $@10 • expression ';' $@11 for_update_expr ')' $@12 statement

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 167
    primary_expression  go to state 82


State 142

   78 switch_statement: SWITCH '(' expression ')' • '{' @13 case_list '}'

    '{'  shift, and go to state 168


State 143

  107 primary_expression: IDENTIFIER '(' ')' •

    $default  reduce using rule 107 (primary_expression)


State 144

   58 arg_list: arg_list • ',' expression
  108 primary_expression: IDENTIFIER '(' arg_list • ')'

    ','  shift, and go to state 133
    ')'  shift, and go to state 169


State 145

  113 primary_expression: '(' expression ')' •

    $default  reduce using rule 113 (primary_expression)


State 146

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   94           | expression EQ expression •
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 94 (expression)


State 147

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   95           | expression NEQ expression •
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 95 (expression)


State 148

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  101           | expression LE expression •
  102           | expression • GE expression

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119

    $default  reduce using rule 101 (expression)


State 149

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression
  102           | expression GE expression •

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119

    $default  reduce using rule 102 (expression)


State 150

   88 expression: expression • PLUS expression
   88           | expression PLUS expression •
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    MULT  shift, and go to state 117
    DIV   shift, and go to state 118
    MOD   shift, and go to state 119

    $default  reduce using rule 88 (expression)


State 151

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   89           | expression MINUS expression •
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    MULT  shift, and go to state 117
    DIV   shift, and go to state 118
    MOD   shift, and go to state 119

    $default  reduce using rule 89 (expression)


State 152

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   90           | expression MULT expression •
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    $default  reduce using rule 90 (expression)


State 153

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   91           | expression DIV expression •
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    $default  reduce using rule 91 (expression)


State 154

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   92           | expression MOD expression •
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    $default  reduce using rule 92 (expression)


State 155

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   96           | expression AND expression •
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 96 (expression)


State 156

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   97           | expression OR expression •
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 97 (expression)


State 157

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
   99           | expression '<' expression •
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119

    $default  reduce using rule 99 (expression)


State 158

   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  100           | expression '>' expression •
  101           | expression • LE expression
  102           | expression • GE expression

    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119

    $default  reduce using rule 100 (expression)


State 159

   29 block: '{' $@3 block_content '}' •

    $default  reduce using rule 29 (block)


State 160

   24 decl_list: decl_list ',' IDENTIFIER •

    $default  reduce using rule 24 (decl_list)


State 161

   26 declaration: type decl_list '=' expression • ';'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ';'    shift, and go to state 170
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 162

   61 if_statement: if_start statement ELSE $@6 • statement

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 171
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 163

   58 arg_list: arg_list ',' expression •
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 58 (arg_list)


State 164

   56 func_call: IDENTIFIER '(' arg_list ')' ';' •

    $default  reduce using rule 56 (func_call)


State 165

   65 while_statement: WHILE '(' $@7 expression ')' • $@8 statement

    $default  reduce using rule 64 ($@8)

    $@8  go to state 172


State 166

   67 repeat_until_statement: REPEAT $@9 statements UNTIL '(' • expression ')' ';'

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 173
    primary_expression  go to state 82


State 167

   71 for_statement: FOR '(' for_start $@10 expression • ';' $@11 for_update_expr ')' $@12 statement
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ';'    shift, and go to state 174
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 168

   78 switch_statement: SWITCH '(' expression ')' '{' • @13 case_list '}'

    $default  reduce using rule 77 (@13)

    @13  go to state 175


State 169

  108 primary_expression: IDENTIFIER '(' arg_list ')' •

    $default  reduce using rule 108 (primary_expression)


State 170

   26 declaration: type decl_list '=' expression ';' •

    $default  reduce using rule 26 (declaration)


State 171

   61 if_statement: if_start statement ELSE $@6 statement •

    $default  reduce using rule 61 (if_statement)


State 172

   65 while_statement: WHILE '(' $@7 expression ')' $@8 • statement

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 176
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 173

   67 repeat_until_statement: REPEAT $@9 statements UNTIL '(' expression • ')' ';'
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ')'    shift, and go to state 177
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124


State 174

   71 for_statement: FOR '(' for_start $@10 expression ';' • $@11 for_update_expr ')' $@12 statement

    $default  reduce using rule 69 ($@11)

    $@11  go to state 178


State 175

   78 switch_statement: SWITCH '(' expression ')' '{' @13 • case_list '}'

    $default  reduce using rule 82 (case_list)

    case_list  go to state 179


State 176

   65 while_statement: WHILE '(' $@7 expression ')' $@8 statement •

    $default  reduce using rule 65 (while_statement)


State 177

   67 repeat_until_statement: REPEAT $@9 statements UNTIL '(' expression ')' • ';'

    ';'  shift, and go to state 180


State 178

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 • for_update_expr ')' $@12 statement

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 181
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    $default  reduce using rule 76 (for_update_expr)

    for_update_expr     go to state 182
    expression          go to state 183
    primary_expression  go to state 82


State 179

   78 switch_statement: SWITCH '(' expression ')' '{' @13 case_list • '}'
   80 case_list: case_list • CASE constant ':' @14 statements
   81          | case_list • DEFAULT ':' statements

    CASE     shift, and go to state 184
    DEFAULT  shift, and go to state 185
    '}'      shift, and go to state 186


State 180

   67 repeat_until_statement: REPEAT $@9 statements UNTIL '(' expression ')' ';' •

    $default  reduce using rule 67 (repeat_until_statement)


State 181

   75 for_update_expr: IDENTIFIER • '=' expression
  104 primary_expression: IDENTIFIER •
  105                   | IDENTIFIER • INC
  106                   | IDENTIFIER • DEC
  107                   | IDENTIFIER • '(' ')'
  108                   | IDENTIFIER • '(' arg_list ')'

    INC  shift, and go to state 105
    DEC  shift, and go to state 106
    '('  shift, and go to state 107
    '='  shift, and go to state 187

    $default  reduce using rule 104 (primary_expression)


State 182

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 for_update_expr • ')' $@12 statement

    ')'  shift, and go to state 188


State 183

   74 for_update_expr: expression •
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 74 (for_update_expr)


State 184

   80 case_list: case_list CASE • constant ':' @14 statements

    NUMBER        shift, and go to state 189
    CHAR_LITERAL  shift, and go to state 190
    IDENTIFIER    shift, and go to state 191

    constant  go to state 192


State 185

   81 case_list: case_list DEFAULT • ':' statements

    ':'  shift, and go to state 193


State 186

   78 switch_statement: SWITCH '(' expression ')' '{' @13 case_list '}' •

    $default  reduce using rule 78 (switch_statement)


State 187

   75 for_update_expr: IDENTIFIER '=' • expression

    NUMBER          shift, and go to state 72
    CHAR_LITERAL    shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    IDENTIFIER      shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    MINUS           shift, and go to state 77
    NOT             shift, and go to state 78
    '('             shift, and go to state 80

    expression          go to state 194
    primary_expression  go to state 82


State 188

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 for_update_expr ')' • $@12 statement

    $default  reduce using rule 70 ($@12)

    $@12  go to state 195


State 189

   83 constant: NUMBER •

    $default  reduce using rule 83 (constant)


State 190

   84 constant: CHAR_LITERAL •

    $default  reduce using rule 84 (constant)


State 191

   85 constant: IDENTIFIER •

    $default  reduce using rule 85 (constant)


State 192

   80 case_list: case_list CASE constant • ':' @14 statements

    ':'  shift, and go to state 196


State 193

   81 case_list: case_list DEFAULT ':' • statements

    $default  reduce using rule 37 (statements)

    statements  go to state 197


State 194

   75 for_update_expr: IDENTIFIER '=' expression •
   88 expression: expression • PLUS expression
   89           | expression • MINUS expression
   90           | expression • MULT expression
   91           | expression • DIV expression
   92           | expression • MOD expression
   94           | expression • EQ expression
   95           | expression • NEQ expression
   96           | expression • AND expression
   97           | expression • OR expression
   99           | expression • '<' expression
  100           | expression • '>' expression
  101           | expression • LE expression
  102           | expression • GE expression

    EQ     shift, and go to state 111
    NEQ    shift, and go to state 112
    LE     shift, and go to state 113
    GE     shift, and go to state 114
    PLUS   shift, and go to state 115
    MINUS  shift, and go to state 116
    MULT   shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    '<'    shift, and go to state 123
    '>'    shift, and go to state 124

    $default  reduce using rule 75 (for_update_expr)


State 195

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 for_update_expr ')' $@12 • statement

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 198
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 196

   80 case_list: case_list CASE constant ':' • @14 statements

    $default  reduce using rule 79 (@14)

    @14  go to state 199


State 197

   36 statements: statements • statement
   81 case_list: case_list DEFAULT ':' statements •

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    CASE     reduce using rule 81 (case_list)
    DEFAULT  reduce using rule 81 (case_list)
    '}'      reduce using rule 81 (case_list)

    block                   go to state 48
    statement               go to state 140
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88


State 198

   71 for_statement: FOR '(' for_start $@10 expression ';' $@11 for_update_expr ')' $@12 statement •

    $default  reduce using rule 71 (for_statement)


State 199

   80 case_list: case_list CASE constant ':' @14 • statements

    $default  reduce using rule 37 (statements)

    statements  go to state 200


State 200

   36 statements: statements • statement
   80 case_list: case_list CASE constant ':' @14 statements •

    error       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    REPEAT      shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    CASE     reduce using rule 80 (case_list)
    DEFAULT  reduce using rule 80 (case_list)
    '}'      reduce using rule 80 (case_list)

    block                   go to state 48
    statement               go to state 140
    assignment              go to state 50
    break_statement         go to state 51
    inc_dec_statement       go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 88
