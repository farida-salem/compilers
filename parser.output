Terminals unused in grammar

    THEN


State 102 conflicts: 15 shift/reduce
State 103 conflicts: 15 shift/reduce
State 137 conflicts: 4 shift/reduce
State 138 conflicts: 4 shift/reduce
State 139 conflicts: 4 shift/reduce
State 140 conflicts: 4 shift/reduce
State 141 conflicts: 4 shift/reduce
State 142 conflicts: 4 shift/reduce
State 143 conflicts: 4 shift/reduce
State 144 conflicts: 4 shift/reduce
State 145 conflicts: 4 shift/reduce
State 146 conflicts: 15 shift/reduce
State 147 conflicts: 15 shift/reduce
State 148 conflicts: 15 shift/reduce
State 149 conflicts: 15 shift/reduce
State 150 conflicts: 4 shift/reduce
State 151 conflicts: 4 shift/reduce
State 162 conflicts: 16 shift/reduce
State 164 conflicts: 4 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 functions

    3 functions: functions function
    4          | function

    5 function: func_types IDENTIFIER '(' params ')' func_block

    6 params: param_list
    7       | ε

    8 param_list: param_list ',' param
    9           | param

   10 param: type IDENTIFIER

   11 func_types: INT
   12           | FLOAT
   13           | CHAR
   14           | CONST func_types
   15           | VOID

   16 type: INT
   17     | FLOAT
   18     | CHAR
   19     | CONST type

   20 decl_list: IDENTIFIER
   21          | decl_list ',' IDENTIFIER

   22 declaration: type decl_list ';'
   23            | type decl_list '=' expression ';'

   24 $@2: ε

   25 block: '{' block_content '}' $@2 block_content

   26 block_content: block_content declaration
   27              | block_content statement
   28              | ε

   29 $@3: ε

   30 func_block: '{' block_content return_statement '}' $@3 block_content return_statement

   31 statements: statements statement
   32           | ε

   33 statement: assignment
   34          | if_statement
   35          | while_statement
   36          | repeat_until_statement
   37          | for_statement
   38          | switch_statement
   39          | return_statement
   40          | break_statement
   41          | continue_statement
   42          | func_call
   43          | inc_dec
   44          | block

   45 assignment: IDENTIFIER '=' expression ';'

   46 break_statement: BREAK ';'

   47 continue_statement: CONTINUE ';'

   48 func_call: IDENTIFIER '(' ')' ';'

   49 inc_dec: IDENTIFIER INC ';'
   50        | IDENTIFIER DEC ';'
   51        | INC IDENTIFIER ';'
   52        | DEC IDENTIFIER ';'

   53 if_statement: IF '(' expression ')' statement ELSE statement

   54 while_statement: WHILE '(' expression ')' statement

   55 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';'

   56 $@4: ε

   57 for_statement: FOR '(' $@4 declaration expression ';' expression ')' statement
   58              | FOR '(' assignment expression ';' expression ')' statement

   59 switch_statement: SWITCH '(' expression ')' '{' case_list '}'

   60 case_list: case_list CASE constant ':' statements
   61          | case_list DEFAULT ':' statements
   62          | ε

   63 constant: NUMBER
   64         | IDENTIFIER

   65 return_statement: RETURN expression ';'
   66                 | RETURN ';'

   67 expression: expression PLUS expression
   68           | expression MINUS expression
   69           | expression MULT expression
   70           | expression DIV expression
   71           | expression MOD expression
   72           | expression EQ expression
   73           | expression NEQ expression
   74           | expression AND expression
   75           | expression OR expression
   76           | NOT expression
   77           | expression BITWISE_AND expression
   78           | expression BITWISE_OR expression
   79           | BITWISE_NOT expression
   80           | expression '<' expression
   81           | expression '>' expression
   82           | expression LE expression
   83           | expression GE expression
   84           | IDENTIFIER INC
   85           | IDENTIFIER DEC
   86           | INC IDENTIFIER
   87           | DEC IDENTIFIER
   88           | '(' expression ')'
   89           | IDENTIFIER
   90           | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 48 53 54 55 57 58 59 88
    ')' (41) 5 48 53 54 55 57 58 59 88
    ',' (44) 8 21
    ':' (58) 60 61
    ';' (59) 22 23 45 46 47 48 49 50 51 52 55 57 58 65 66
    '<' (60) 80
    '=' (61) 23 45
    '>' (62) 81
    '{' (123) 25 30 59
    '}' (125) 25 30 59
    error (256)
    NUMBER <num> (258) 63 90
    IDENTIFIER <id> (259) 5 10 20 21 45 48 49 50 51 52 64 84 85 86 87 89
    IF (260) 53
    THEN (261)
    ELSE (262) 53
    WHILE (263) 54
    REPEAT (264) 55
    UNTIL (265) 55
    FOR (266) 57 58
    SWITCH (267) 59
    CASE (268) 60
    DEFAULT (269) 61
    BREAK (270) 46
    CONTINUE (271) 47
    RETURN (272) 65 66
    INT (273) 11 16
    FLOAT (274) 12 17
    CHAR (275) 13 18
    VOID (276) 15
    CONST (277) 14 19
    EQ (278) 72
    NEQ (279) 73
    LE (280) 82
    GE (281) 83
    PLUS (282) 67
    MINUS (283) 68
    MULT (284) 69
    DIV (285) 70
    MOD (286) 71
    INC (287) 49 51 84 86
    DEC (288) 50 52 85 87
    AND (289) 74
    OR (290) 75
    NOT (291) 76
    BITWISE_AND (292) 77
    BITWISE_NOT (293) 79
    BITWISE_OR (294) 78


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 2
        on right: 0
    $@1 (52)
        on left: 1
        on right: 2
    functions (53)
        on left: 3 4
        on right: 2 3
    function (54)
        on left: 5
        on right: 3 4
    params (55)
        on left: 6 7
        on right: 5
    param_list <param> (56)
        on left: 8 9
        on right: 6 8
    param <param> (57)
        on left: 10
        on right: 8 9
    func_types <immutability> (58)
        on left: 11 12 13 14 15
        on right: 5 14
    type <immutability> (59)
        on left: 16 17 18 19
        on right: 10 19 22 23
    decl_list <idlist> (60)
        on left: 20 21
        on right: 21 22 23
    declaration (61)
        on left: 22 23
        on right: 26 57
    block (62)
        on left: 25
        on right: 44
    $@2 (63)
        on left: 24
        on right: 25
    block_content (64)
        on left: 26 27 28
        on right: 25 26 27 30
    func_block (65)
        on left: 30
        on right: 5
    $@3 (66)
        on left: 29
        on right: 30
    statements (67)
        on left: 31 32
        on right: 31 55 60 61
    statement (68)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 27 31 53 54 57 58
    assignment (69)
        on left: 45
        on right: 33 58
    break_statement (70)
        on left: 46
        on right: 40
    continue_statement (71)
        on left: 47
        on right: 41
    func_call (72)
        on left: 48
        on right: 42
    inc_dec (73)
        on left: 49 50 51 52
        on right: 43
    if_statement (74)
        on left: 53
        on right: 34
    while_statement (75)
        on left: 54
        on right: 35
    repeat_until_statement (76)
        on left: 55
        on right: 36
    for_statement (77)
        on left: 57 58
        on right: 37
    $@4 (78)
        on left: 56
        on right: 57
    switch_statement (79)
        on left: 59
        on right: 38
    case_list (80)
        on left: 60 61 62
        on right: 59 60 61
    constant <type> (81)
        on left: 63 64
        on right: 60
    return_statement (82)
        on left: 65 66
        on right: 30 39
    expression <type> (83)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
        on right: 23 45 53 54 55 57 58 59 65 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 88


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • functions

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    CONST  shift, and go to state 8

    functions   go to state 9
    function    go to state 10
    func_types  go to state 11


State 3

    0 $accept: program $end •

    $default  accept


State 4

   11 func_types: INT •

    $default  reduce using rule 11 (func_types)


State 5

   12 func_types: FLOAT •

    $default  reduce using rule 12 (func_types)


State 6

   13 func_types: CHAR •

    $default  reduce using rule 13 (func_types)


State 7

   15 func_types: VOID •

    $default  reduce using rule 15 (func_types)


State 8

   14 func_types: CONST • func_types

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    CONST  shift, and go to state 8

    func_types  go to state 12


State 9

    2 program: $@1 functions •
    3 functions: functions • function

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    CONST  shift, and go to state 8

    $default  reduce using rule 2 (program)

    function    go to state 13
    func_types  go to state 11


State 10

    4 functions: function •

    $default  reduce using rule 4 (functions)


State 11

    5 function: func_types • IDENTIFIER '(' params ')' func_block

    IDENTIFIER  shift, and go to state 14


State 12

   14 func_types: CONST func_types •

    $default  reduce using rule 14 (func_types)


State 13

    3 functions: functions function •

    $default  reduce using rule 3 (functions)


State 14

    5 function: func_types IDENTIFIER • '(' params ')' func_block

    '('  shift, and go to state 15


State 15

    5 function: func_types IDENTIFIER '(' • params ')' func_block

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18
    CONST  shift, and go to state 19

    $default  reduce using rule 7 (params)

    params      go to state 20
    param_list  go to state 21
    param       go to state 22
    type        go to state 23


State 16

   16 type: INT •

    $default  reduce using rule 16 (type)


State 17

   17 type: FLOAT •

    $default  reduce using rule 17 (type)


State 18

   18 type: CHAR •

    $default  reduce using rule 18 (type)


State 19

   19 type: CONST • type

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18
    CONST  shift, and go to state 19

    type  go to state 24


State 20

    5 function: func_types IDENTIFIER '(' params • ')' func_block

    ')'  shift, and go to state 25


State 21

    6 params: param_list •
    8 param_list: param_list • ',' param

    ','  shift, and go to state 26

    $default  reduce using rule 6 (params)


State 22

    9 param_list: param •

    $default  reduce using rule 9 (param_list)


State 23

   10 param: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 27


State 24

   19 type: CONST type •

    $default  reduce using rule 19 (type)


State 25

    5 function: func_types IDENTIFIER '(' params ')' • func_block

    '{'  shift, and go to state 28

    func_block  go to state 29


State 26

    8 param_list: param_list ',' • param

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18
    CONST  shift, and go to state 19

    param  go to state 30
    type   go to state 23


State 27

   10 param: type IDENTIFIER •

    $default  reduce using rule 10 (param)


State 28

   30 func_block: '{' • block_content return_statement '}' $@3 block_content return_statement

    $default  reduce using rule 28 (block_content)

    block_content  go to state 31


State 29

    5 function: func_types IDENTIFIER '(' params ')' func_block •

    $default  reduce using rule 5 (function)


State 30

    8 param_list: param_list ',' param •

    $default  reduce using rule 8 (param_list)


State 31

   26 block_content: block_content • declaration
   27              | block_content • statement
   30 func_block: '{' block_content • return_statement '}' $@3 block_content return_statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INT         shift, and go to state 16
    FLOAT       shift, and go to state 17
    CHAR        shift, and go to state 18
    CONST       shift, and go to state 19
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    type                    go to state 44
    declaration             go to state 45
    block                   go to state 46
    statement               go to state 47
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 58


State 32

   45 assignment: IDENTIFIER • '=' expression ';'
   48 func_call: IDENTIFIER • '(' ')' ';'
   49 inc_dec: IDENTIFIER • INC ';'
   50        | IDENTIFIER • DEC ';'

    INC  shift, and go to state 59
    DEC  shift, and go to state 60
    '('  shift, and go to state 61
    '='  shift, and go to state 62


State 33

   53 if_statement: IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 63


State 34

   54 while_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 64


State 35

   55 repeat_until_statement: REPEAT • statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 32 (statements)

    statements  go to state 65


State 36

   57 for_statement: FOR • '(' $@4 declaration expression ';' expression ')' statement
   58              | FOR • '(' assignment expression ';' expression ')' statement

    '('  shift, and go to state 66


State 37

   59 switch_statement: SWITCH • '(' expression ')' '{' case_list '}'

    '('  shift, and go to state 67


State 38

   46 break_statement: BREAK • ';'

    ';'  shift, and go to state 68


State 39

   47 continue_statement: CONTINUE • ';'

    ';'  shift, and go to state 69


State 40

   65 return_statement: RETURN • expression ';'
   66                 | RETURN • ';'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    ';'          shift, and go to state 76
    '('          shift, and go to state 77

    expression  go to state 78


State 41

   51 inc_dec: INC • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 79


State 42

   52 inc_dec: DEC • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 80


State 43

   25 block: '{' • block_content '}' $@2 block_content

    $default  reduce using rule 28 (block_content)

    block_content  go to state 81


State 44

   22 declaration: type • decl_list ';'
   23            | type • decl_list '=' expression ';'

    IDENTIFIER  shift, and go to state 82

    decl_list  go to state 83


State 45

   26 block_content: block_content declaration •

    $default  reduce using rule 26 (block_content)


State 46

   44 statement: block •

    $default  reduce using rule 44 (statement)


State 47

   27 block_content: block_content statement •

    $default  reduce using rule 27 (block_content)


State 48

   33 statement: assignment •

    $default  reduce using rule 33 (statement)


State 49

   40 statement: break_statement •

    $default  reduce using rule 40 (statement)


State 50

   41 statement: continue_statement •

    $default  reduce using rule 41 (statement)


State 51

   42 statement: func_call •

    $default  reduce using rule 42 (statement)


State 52

   43 statement: inc_dec •

    $default  reduce using rule 43 (statement)


State 53

   34 statement: if_statement •

    $default  reduce using rule 34 (statement)


State 54

   35 statement: while_statement •

    $default  reduce using rule 35 (statement)


State 55

   36 statement: repeat_until_statement •

    $default  reduce using rule 36 (statement)


State 56

   37 statement: for_statement •

    $default  reduce using rule 37 (statement)


State 57

   38 statement: switch_statement •

    $default  reduce using rule 38 (statement)


State 58

   30 func_block: '{' block_content return_statement • '}' $@3 block_content return_statement
   39 statement: return_statement •

    '}'  shift, and go to state 84

    $default  reduce using rule 39 (statement)


State 59

   49 inc_dec: IDENTIFIER INC • ';'

    ';'  shift, and go to state 85


State 60

   50 inc_dec: IDENTIFIER DEC • ';'

    ';'  shift, and go to state 86


State 61

   48 func_call: IDENTIFIER '(' • ')' ';'

    ')'  shift, and go to state 87


State 62

   45 assignment: IDENTIFIER '=' • expression ';'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 88


State 63

   53 if_statement: IF '(' • expression ')' statement ELSE statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 89


State 64

   54 while_statement: WHILE '(' • expression ')' statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 90


State 65

   31 statements: statements • statement
   55 repeat_until_statement: REPEAT statements • UNTIL '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    UNTIL       shift, and go to state 91
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 92
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 66

   57 for_statement: FOR '(' • $@4 declaration expression ';' expression ')' statement
   58              | FOR '(' • assignment expression ';' expression ')' statement

    IDENTIFIER  shift, and go to state 94

    $default  reduce using rule 56 ($@4)

    assignment  go to state 95
    $@4         go to state 96


State 67

   59 switch_statement: SWITCH '(' • expression ')' '{' case_list '}'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 97


State 68

   46 break_statement: BREAK ';' •

    $default  reduce using rule 46 (break_statement)


State 69

   47 continue_statement: CONTINUE ';' •

    $default  reduce using rule 47 (continue_statement)


State 70

   90 expression: NUMBER •

    $default  reduce using rule 90 (expression)


State 71

   84 expression: IDENTIFIER • INC
   85           | IDENTIFIER • DEC
   89           | IDENTIFIER •

    INC  shift, and go to state 98
    DEC  shift, and go to state 99

    $default  reduce using rule 89 (expression)


State 72

   86 expression: INC • IDENTIFIER

    IDENTIFIER  shift, and go to state 100


State 73

   87 expression: DEC • IDENTIFIER

    IDENTIFIER  shift, and go to state 101


State 74

   76 expression: NOT • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 102


State 75

   79 expression: BITWISE_NOT • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 103


State 76

   66 return_statement: RETURN ';' •

    $default  reduce using rule 66 (return_statement)


State 77

   88 expression: '(' • expression ')'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 104


State 78

   65 return_statement: RETURN expression • ';'
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ';'          shift, and go to state 118
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 79

   51 inc_dec: INC IDENTIFIER • ';'

    ';'  shift, and go to state 121


State 80

   52 inc_dec: DEC IDENTIFIER • ';'

    ';'  shift, and go to state 122


State 81

   25 block: '{' block_content • '}' $@2 block_content
   26 block_content: block_content • declaration
   27              | block_content • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INT         shift, and go to state 16
    FLOAT       shift, and go to state 17
    CHAR        shift, and go to state 18
    CONST       shift, and go to state 19
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43
    '}'         shift, and go to state 123

    type                    go to state 44
    declaration             go to state 45
    block                   go to state 46
    statement               go to state 47
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 82

   20 decl_list: IDENTIFIER •

    $default  reduce using rule 20 (decl_list)


State 83

   21 decl_list: decl_list • ',' IDENTIFIER
   22 declaration: type decl_list • ';'
   23            | type decl_list • '=' expression ';'

    ';'  shift, and go to state 124
    ','  shift, and go to state 125
    '='  shift, and go to state 126


State 84

   30 func_block: '{' block_content return_statement '}' • $@3 block_content return_statement

    $default  reduce using rule 29 ($@3)

    $@3  go to state 127


State 85

   49 inc_dec: IDENTIFIER INC ';' •

    $default  reduce using rule 49 (inc_dec)


State 86

   50 inc_dec: IDENTIFIER DEC ';' •

    $default  reduce using rule 50 (inc_dec)


State 87

   48 func_call: IDENTIFIER '(' ')' • ';'

    ';'  shift, and go to state 128


State 88

   45 assignment: IDENTIFIER '=' expression • ';'
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ';'          shift, and go to state 129
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 89

   53 if_statement: IF '(' expression • ')' statement ELSE statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 130
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 90

   54 while_statement: WHILE '(' expression • ')' statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 131
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 91

   55 repeat_until_statement: REPEAT statements UNTIL • '(' expression ')' ';'

    '('  shift, and go to state 132


State 92

   31 statements: statements statement •

    $default  reduce using rule 31 (statements)


State 93

   39 statement: return_statement •

    $default  reduce using rule 39 (statement)


State 94

   45 assignment: IDENTIFIER • '=' expression ';'

    '='  shift, and go to state 62


State 95

   58 for_statement: FOR '(' assignment • expression ';' expression ')' statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 133


State 96

   57 for_statement: FOR '(' $@4 • declaration expression ';' expression ')' statement

    INT    shift, and go to state 16
    FLOAT  shift, and go to state 17
    CHAR   shift, and go to state 18
    CONST  shift, and go to state 19

    type         go to state 44
    declaration  go to state 134


State 97

   59 switch_statement: SWITCH '(' expression • ')' '{' case_list '}'
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 135
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 98

   84 expression: IDENTIFIER INC •

    $default  reduce using rule 84 (expression)


State 99

   85 expression: IDENTIFIER DEC •

    $default  reduce using rule 85 (expression)


State 100

   86 expression: INC IDENTIFIER •

    $default  reduce using rule 86 (expression)


State 101

   87 expression: DEC IDENTIFIER •

    $default  reduce using rule 87 (expression)


State 102

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   76           | NOT expression •
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 76 (expression)]
    NEQ          [reduce using rule 76 (expression)]
    LE           [reduce using rule 76 (expression)]
    GE           [reduce using rule 76 (expression)]
    PLUS         [reduce using rule 76 (expression)]
    MINUS        [reduce using rule 76 (expression)]
    MULT         [reduce using rule 76 (expression)]
    DIV          [reduce using rule 76 (expression)]
    MOD          [reduce using rule 76 (expression)]
    AND          [reduce using rule 76 (expression)]
    OR           [reduce using rule 76 (expression)]
    BITWISE_AND  [reduce using rule 76 (expression)]
    BITWISE_OR   [reduce using rule 76 (expression)]
    '<'          [reduce using rule 76 (expression)]
    '>'          [reduce using rule 76 (expression)]
    $default     reduce using rule 76 (expression)


State 103

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   79           | BITWISE_NOT expression •
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 79 (expression)]
    NEQ          [reduce using rule 79 (expression)]
    LE           [reduce using rule 79 (expression)]
    GE           [reduce using rule 79 (expression)]
    PLUS         [reduce using rule 79 (expression)]
    MINUS        [reduce using rule 79 (expression)]
    MULT         [reduce using rule 79 (expression)]
    DIV          [reduce using rule 79 (expression)]
    MOD          [reduce using rule 79 (expression)]
    AND          [reduce using rule 79 (expression)]
    OR           [reduce using rule 79 (expression)]
    BITWISE_AND  [reduce using rule 79 (expression)]
    BITWISE_OR   [reduce using rule 79 (expression)]
    '<'          [reduce using rule 79 (expression)]
    '>'          [reduce using rule 79 (expression)]
    $default     reduce using rule 79 (expression)


State 104

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression
   88           | '(' expression • ')'

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 136
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 105

   72 expression: expression EQ • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 137


State 106

   73 expression: expression NEQ • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 138


State 107

   82 expression: expression LE • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 139


State 108

   83 expression: expression GE • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 140


State 109

   67 expression: expression PLUS • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 141


State 110

   68 expression: expression MINUS • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 142


State 111

   69 expression: expression MULT • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 143


State 112

   70 expression: expression DIV • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 144


State 113

   71 expression: expression MOD • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 145


State 114

   74 expression: expression AND • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 146


State 115

   75 expression: expression OR • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 147


State 116

   77 expression: expression BITWISE_AND • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 148


State 117

   78 expression: expression BITWISE_OR • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 149


State 118

   65 return_statement: RETURN expression ';' •

    $default  reduce using rule 65 (return_statement)


State 119

   80 expression: expression '<' • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 150


State 120

   81 expression: expression '>' • expression

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 151


State 121

   51 inc_dec: INC IDENTIFIER ';' •

    $default  reduce using rule 51 (inc_dec)


State 122

   52 inc_dec: DEC IDENTIFIER ';' •

    $default  reduce using rule 52 (inc_dec)


State 123

   25 block: '{' block_content '}' • $@2 block_content

    $default  reduce using rule 24 ($@2)

    $@2  go to state 152


State 124

   22 declaration: type decl_list ';' •

    $default  reduce using rule 22 (declaration)


State 125

   21 decl_list: decl_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 126

   23 declaration: type decl_list '=' • expression ';'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 154


State 127

   30 func_block: '{' block_content return_statement '}' $@3 • block_content return_statement

    $default  reduce using rule 28 (block_content)

    block_content  go to state 155


State 128

   48 func_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 48 (func_call)


State 129

   45 assignment: IDENTIFIER '=' expression ';' •

    $default  reduce using rule 45 (assignment)


State 130

   53 if_statement: IF '(' expression ')' • statement ELSE statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 156
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 131

   54 while_statement: WHILE '(' expression ')' • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 157
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 132

   55 repeat_until_statement: REPEAT statements UNTIL '(' • expression ')' ';'

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 158


State 133

   58 for_statement: FOR '(' assignment expression • ';' expression ')' statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ';'          shift, and go to state 159
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 134

   57 for_statement: FOR '(' $@4 declaration • expression ';' expression ')' statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 160


State 135

   59 switch_statement: SWITCH '(' expression ')' • '{' case_list '}'

    '{'  shift, and go to state 161


State 136

   88 expression: '(' expression ')' •

    $default  reduce using rule 88 (expression)


State 137

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   72           | expression EQ expression •
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 72 (expression)]
    OR           [reduce using rule 72 (expression)]
    BITWISE_AND  [reduce using rule 72 (expression)]
    BITWISE_OR   [reduce using rule 72 (expression)]
    $default     reduce using rule 72 (expression)


State 138

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   73           | expression NEQ expression •
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 73 (expression)]
    OR           [reduce using rule 73 (expression)]
    BITWISE_AND  [reduce using rule 73 (expression)]
    BITWISE_OR   [reduce using rule 73 (expression)]
    $default     reduce using rule 73 (expression)


State 139

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   82           | expression LE expression •
   83           | expression • GE expression

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 82 (expression)]
    OR           [reduce using rule 82 (expression)]
    BITWISE_AND  [reduce using rule 82 (expression)]
    BITWISE_OR   [reduce using rule 82 (expression)]
    $default     reduce using rule 82 (expression)


State 140

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression
   83           | expression GE expression •

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 83 (expression)]
    OR           [reduce using rule 83 (expression)]
    BITWISE_AND  [reduce using rule 83 (expression)]
    BITWISE_OR   [reduce using rule 83 (expression)]
    $default     reduce using rule 83 (expression)


State 141

   67 expression: expression • PLUS expression
   67           | expression PLUS expression •
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    AND          [reduce using rule 67 (expression)]
    OR           [reduce using rule 67 (expression)]
    BITWISE_AND  [reduce using rule 67 (expression)]
    BITWISE_OR   [reduce using rule 67 (expression)]
    $default     reduce using rule 67 (expression)


State 142

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   68           | expression MINUS expression •
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    AND          [reduce using rule 68 (expression)]
    OR           [reduce using rule 68 (expression)]
    BITWISE_AND  [reduce using rule 68 (expression)]
    BITWISE_OR   [reduce using rule 68 (expression)]
    $default     reduce using rule 68 (expression)


State 143

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   69           | expression MULT expression •
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    AND          [reduce using rule 69 (expression)]
    OR           [reduce using rule 69 (expression)]
    BITWISE_AND  [reduce using rule 69 (expression)]
    BITWISE_OR   [reduce using rule 69 (expression)]
    $default     reduce using rule 69 (expression)


State 144

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   70           | expression DIV expression •
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    AND          [reduce using rule 70 (expression)]
    OR           [reduce using rule 70 (expression)]
    BITWISE_AND  [reduce using rule 70 (expression)]
    BITWISE_OR   [reduce using rule 70 (expression)]
    $default     reduce using rule 70 (expression)


State 145

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   71           | expression MOD expression •
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    AND          [reduce using rule 71 (expression)]
    OR           [reduce using rule 71 (expression)]
    BITWISE_AND  [reduce using rule 71 (expression)]
    BITWISE_OR   [reduce using rule 71 (expression)]
    $default     reduce using rule 71 (expression)


State 146

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   74           | expression AND expression •
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 74 (expression)]
    NEQ          [reduce using rule 74 (expression)]
    LE           [reduce using rule 74 (expression)]
    GE           [reduce using rule 74 (expression)]
    PLUS         [reduce using rule 74 (expression)]
    MINUS        [reduce using rule 74 (expression)]
    MULT         [reduce using rule 74 (expression)]
    DIV          [reduce using rule 74 (expression)]
    MOD          [reduce using rule 74 (expression)]
    AND          [reduce using rule 74 (expression)]
    OR           [reduce using rule 74 (expression)]
    BITWISE_AND  [reduce using rule 74 (expression)]
    BITWISE_OR   [reduce using rule 74 (expression)]
    '<'          [reduce using rule 74 (expression)]
    '>'          [reduce using rule 74 (expression)]
    $default     reduce using rule 74 (expression)


State 147

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   75           | expression OR expression •
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 75 (expression)]
    NEQ          [reduce using rule 75 (expression)]
    LE           [reduce using rule 75 (expression)]
    GE           [reduce using rule 75 (expression)]
    PLUS         [reduce using rule 75 (expression)]
    MINUS        [reduce using rule 75 (expression)]
    MULT         [reduce using rule 75 (expression)]
    DIV          [reduce using rule 75 (expression)]
    MOD          [reduce using rule 75 (expression)]
    AND          [reduce using rule 75 (expression)]
    OR           [reduce using rule 75 (expression)]
    BITWISE_AND  [reduce using rule 75 (expression)]
    BITWISE_OR   [reduce using rule 75 (expression)]
    '<'          [reduce using rule 75 (expression)]
    '>'          [reduce using rule 75 (expression)]
    $default     reduce using rule 75 (expression)


State 148

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   77           | expression BITWISE_AND expression •
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 77 (expression)]
    NEQ          [reduce using rule 77 (expression)]
    LE           [reduce using rule 77 (expression)]
    GE           [reduce using rule 77 (expression)]
    PLUS         [reduce using rule 77 (expression)]
    MINUS        [reduce using rule 77 (expression)]
    MULT         [reduce using rule 77 (expression)]
    DIV          [reduce using rule 77 (expression)]
    MOD          [reduce using rule 77 (expression)]
    AND          [reduce using rule 77 (expression)]
    OR           [reduce using rule 77 (expression)]
    BITWISE_AND  [reduce using rule 77 (expression)]
    BITWISE_OR   [reduce using rule 77 (expression)]
    '<'          [reduce using rule 77 (expression)]
    '>'          [reduce using rule 77 (expression)]
    $default     reduce using rule 77 (expression)


State 149

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   78           | expression BITWISE_OR expression •
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120

    EQ           [reduce using rule 78 (expression)]
    NEQ          [reduce using rule 78 (expression)]
    LE           [reduce using rule 78 (expression)]
    GE           [reduce using rule 78 (expression)]
    PLUS         [reduce using rule 78 (expression)]
    MINUS        [reduce using rule 78 (expression)]
    MULT         [reduce using rule 78 (expression)]
    DIV          [reduce using rule 78 (expression)]
    MOD          [reduce using rule 78 (expression)]
    AND          [reduce using rule 78 (expression)]
    OR           [reduce using rule 78 (expression)]
    BITWISE_AND  [reduce using rule 78 (expression)]
    BITWISE_OR   [reduce using rule 78 (expression)]
    '<'          [reduce using rule 78 (expression)]
    '>'          [reduce using rule 78 (expression)]
    $default     reduce using rule 78 (expression)


State 150

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   80           | expression '<' expression •
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 80 (expression)]
    OR           [reduce using rule 80 (expression)]
    BITWISE_AND  [reduce using rule 80 (expression)]
    BITWISE_OR   [reduce using rule 80 (expression)]
    $default     reduce using rule 80 (expression)


State 151

   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   81           | expression '>' expression •
   82           | expression • LE expression
   83           | expression • GE expression

    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND          [reduce using rule 81 (expression)]
    OR           [reduce using rule 81 (expression)]
    BITWISE_AND  [reduce using rule 81 (expression)]
    BITWISE_OR   [reduce using rule 81 (expression)]
    $default     reduce using rule 81 (expression)


State 152

   25 block: '{' block_content '}' $@2 • block_content

    $default  reduce using rule 28 (block_content)

    block_content  go to state 162


State 153

   21 decl_list: decl_list ',' IDENTIFIER •

    $default  reduce using rule 21 (decl_list)


State 154

   23 declaration: type decl_list '=' expression • ';'
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ';'          shift, and go to state 163
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 155

   26 block_content: block_content • declaration
   27              | block_content • statement
   30 func_block: '{' block_content return_statement '}' $@3 block_content • return_statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INT         shift, and go to state 16
    FLOAT       shift, and go to state 17
    CHAR        shift, and go to state 18
    CONST       shift, and go to state 19
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    type                    go to state 44
    declaration             go to state 45
    block                   go to state 46
    statement               go to state 47
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 164


State 156

   53 if_statement: IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 165


State 157

   54 while_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 54 (while_statement)


State 158

   55 repeat_until_statement: REPEAT statements UNTIL '(' expression • ')' ';'
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 166
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 159

   58 for_statement: FOR '(' assignment expression ';' • expression ')' statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 167


State 160

   57 for_statement: FOR '(' $@4 declaration expression • ';' expression ')' statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ';'          shift, and go to state 168
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 161

   59 switch_statement: SWITCH '(' expression ')' '{' • case_list '}'

    $default  reduce using rule 62 (case_list)

    case_list  go to state 169


State 162

   25 block: '{' block_content '}' $@2 block_content •
   26 block_content: block_content • declaration
   27              | block_content • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INT         shift, and go to state 16
    FLOAT       shift, and go to state 17
    CHAR        shift, and go to state 18
    CONST       shift, and go to state 19
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    IDENTIFIER  [reduce using rule 25 (block)]
    IF          [reduce using rule 25 (block)]
    WHILE       [reduce using rule 25 (block)]
    REPEAT      [reduce using rule 25 (block)]
    FOR         [reduce using rule 25 (block)]
    SWITCH      [reduce using rule 25 (block)]
    BREAK       [reduce using rule 25 (block)]
    CONTINUE    [reduce using rule 25 (block)]
    RETURN      [reduce using rule 25 (block)]
    INT         [reduce using rule 25 (block)]
    FLOAT       [reduce using rule 25 (block)]
    CHAR        [reduce using rule 25 (block)]
    CONST       [reduce using rule 25 (block)]
    INC         [reduce using rule 25 (block)]
    DEC         [reduce using rule 25 (block)]
    '{'         [reduce using rule 25 (block)]
    $default    reduce using rule 25 (block)

    type                    go to state 44
    declaration             go to state 45
    block                   go to state 46
    statement               go to state 47
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 163

   23 declaration: type decl_list '=' expression ';' •

    $default  reduce using rule 23 (declaration)


State 164

   30 func_block: '{' block_content return_statement '}' $@3 block_content return_statement •
   39 statement: return_statement •

    $end      reduce using rule 30 (func_block)
    INT       reduce using rule 30 (func_block)
    INT       [reduce using rule 39 (statement)]
    FLOAT     reduce using rule 30 (func_block)
    FLOAT     [reduce using rule 39 (statement)]
    CHAR      reduce using rule 30 (func_block)
    CHAR      [reduce using rule 39 (statement)]
    VOID      reduce using rule 30 (func_block)
    CONST     reduce using rule 30 (func_block)
    CONST     [reduce using rule 39 (statement)]
    $default  reduce using rule 39 (statement)


State 165

   53 if_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 170
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 166

   55 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' • ';'

    ';'  shift, and go to state 171


State 167

   58 for_statement: FOR '(' assignment expression ';' expression • ')' statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 172
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 168

   57 for_statement: FOR '(' $@4 declaration expression ';' • expression ')' statement

    NUMBER       shift, and go to state 70
    IDENTIFIER   shift, and go to state 71
    INC          shift, and go to state 72
    DEC          shift, and go to state 73
    NOT          shift, and go to state 74
    BITWISE_NOT  shift, and go to state 75
    '('          shift, and go to state 77

    expression  go to state 173


State 169

   59 switch_statement: SWITCH '(' expression ')' '{' case_list • '}'
   60 case_list: case_list • CASE constant ':' statements
   61          | case_list • DEFAULT ':' statements

    CASE     shift, and go to state 174
    DEFAULT  shift, and go to state 175
    '}'      shift, and go to state 176


State 170

   53 if_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 53 (if_statement)


State 171

   55 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';' •

    $default  reduce using rule 55 (repeat_until_statement)


State 172

   58 for_statement: FOR '(' assignment expression ';' expression ')' • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 177
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 173

   57 for_statement: FOR '(' $@4 declaration expression ';' expression • ')' statement
   67 expression: expression • PLUS expression
   68           | expression • MINUS expression
   69           | expression • MULT expression
   70           | expression • DIV expression
   71           | expression • MOD expression
   72           | expression • EQ expression
   73           | expression • NEQ expression
   74           | expression • AND expression
   75           | expression • OR expression
   77           | expression • BITWISE_AND expression
   78           | expression • BITWISE_OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ           shift, and go to state 105
    NEQ          shift, and go to state 106
    LE           shift, and go to state 107
    GE           shift, and go to state 108
    PLUS         shift, and go to state 109
    MINUS        shift, and go to state 110
    MULT         shift, and go to state 111
    DIV          shift, and go to state 112
    MOD          shift, and go to state 113
    AND          shift, and go to state 114
    OR           shift, and go to state 115
    BITWISE_AND  shift, and go to state 116
    BITWISE_OR   shift, and go to state 117
    ')'          shift, and go to state 178
    '<'          shift, and go to state 119
    '>'          shift, and go to state 120


State 174

   60 case_list: case_list CASE • constant ':' statements

    NUMBER      shift, and go to state 179
    IDENTIFIER  shift, and go to state 180

    constant  go to state 181


State 175

   61 case_list: case_list DEFAULT • ':' statements

    ':'  shift, and go to state 182


State 176

   59 switch_statement: SWITCH '(' expression ')' '{' case_list '}' •

    $default  reduce using rule 59 (switch_statement)


State 177

   58 for_statement: FOR '(' assignment expression ';' expression ')' statement •

    $default  reduce using rule 58 (for_statement)


State 178

   57 for_statement: FOR '(' $@4 declaration expression ';' expression ')' • statement

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    block                   go to state 46
    statement               go to state 183
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 179

   63 constant: NUMBER •

    $default  reduce using rule 63 (constant)


State 180

   64 constant: IDENTIFIER •

    $default  reduce using rule 64 (constant)


State 181

   60 case_list: case_list CASE constant • ':' statements

    ':'  shift, and go to state 184


State 182

   61 case_list: case_list DEFAULT ':' • statements

    $default  reduce using rule 32 (statements)

    statements  go to state 185


State 183

   57 for_statement: FOR '(' $@4 declaration expression ';' expression ')' statement •

    $default  reduce using rule 57 (for_statement)


State 184

   60 case_list: case_list CASE constant ':' • statements

    $default  reduce using rule 32 (statements)

    statements  go to state 186


State 185

   31 statements: statements • statement
   61 case_list: case_list DEFAULT ':' statements •

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    $default  reduce using rule 61 (case_list)

    block                   go to state 46
    statement               go to state 92
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93


State 186

   31 statements: statements • statement
   60 case_list: case_list CASE constant ':' statements •

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    REPEAT      shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    BREAK       shift, and go to state 38
    CONTINUE    shift, and go to state 39
    RETURN      shift, and go to state 40
    INC         shift, and go to state 41
    DEC         shift, and go to state 42
    '{'         shift, and go to state 43

    $default  reduce using rule 60 (case_list)

    block                   go to state 46
    statement               go to state 92
    assignment              go to state 48
    break_statement         go to state 49
    continue_statement      go to state 50
    func_call               go to state 51
    inc_dec                 go to state 52
    if_statement            go to state 53
    while_statement         go to state 54
    repeat_until_statement  go to state 55
    for_statement           go to state 56
    switch_statement        go to state 57
    return_statement        go to state 93
