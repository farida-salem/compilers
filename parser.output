Terminals unused in grammar

    BITWISE_OR
    BITWISE_AND
    BITWISE_NOT
    INC
    DEC


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 functions

    3 functions: functions function
    4          | function

    5 $@2: ε

    6 function: func_types IDENTIFIER '(' params ')' $@2 func_block

    7 params: param_list
    8       | ε

    9 param_list: param_list ',' param
   10           | param

   11 param: type IDENTIFIER

   12 func_types: INT
   13           | FLOAT
   14           | CHAR
   15           | STRING
   16           | CONST func_types
   17           | VOID

   18 type: INT
   19     | FLOAT
   20     | CHAR
   21     | STRING
   22     | CONST type

   23 decl_list: IDENTIFIER
   24          | decl_list ',' IDENTIFIER

   25 declaration: type decl_list ';'
   26            | type decl_list '=' expression ';'

   27 $@3: ε

   28 block: '{' $@3 block_content '}'

   29 block_content: block_content declaration
   30              | block_content statement
   31              | ε

   32 $@4: ε

   33 func_block: '{' $@4 block_content return_statement '}'

   34 statements: statements statement
   35           | ε

   36 statement: assignment
   37          | if_statement
   38          | while_statement
   39          | repeat_until_statement
   40          | for_statement
   41          | switch_statement
   42          | return_statement
   43          | break_statement
   44          | continue_statement
   45          | func_call
   46          | block

   47 assignment: IDENTIFIER '=' expression ';'

   48 break_statement: BREAK ';'

   49 continue_statement: CONTINUE ';'

   50 func_call: IDENTIFIER '(' ')' ';'

   51 if_statement: if_start statement

   52 @5: ε

   53 if_statement: if_start statement ELSE @5 statement

   54 if_start: IF '(' expression ')'

   55 while_statement: WHILE '(' expression ')' statement

   56 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';'

   57 for_statement: FOR '(' declaration expression ';' expression ')' statement
   58              | FOR '(' assignment expression ';' expression ')' statement

   59 @6: ε

   60 switch_statement: SWITCH '(' expression ')' '{' @6 case_list '}'

   61 @7: ε

   62 case_list: case_list CASE constant ':' @7 statements
   63          | case_list DEFAULT ':' statements
   64          | ε

   65 constant: NUMBER
   66         | CHAR_LITERAL
   67         | IDENTIFIER

   68 return_statement: RETURN expression ';'
   69                 | RETURN ';'

   70 expression: expression PLUS expression
   71           | expression MINUS expression
   72           | expression MULT expression
   73           | expression DIV expression
   74           | expression MOD expression
   75           | expression EQ expression
   76           | expression NEQ expression
   77           | expression AND expression
   78           | expression OR expression
   79           | NOT expression
   80           | expression '<' expression
   81           | expression '>' expression
   82           | expression LE expression
   83           | expression GE expression
   84           | '(' expression ')'
   85           | IDENTIFIER
   86           | NUMBER
   87           | FLOAT_LITERAL
   88           | CHAR_LITERAL
   89           | STRING_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 50 54 55 56 57 58 60 84
    ')' (41) 6 50 54 55 56 57 58 60 84
    ',' (44) 9 24
    ':' (58) 62 63
    ';' (59) 25 26 47 48 49 50 56 57 58 68 69
    '<' (60) 80
    '=' (61) 26 47
    '>' (62) 81
    '{' (123) 28 33 60
    '}' (125) 28 33 60
    error (256)
    NUMBER <num> (258) 65 86
    CHAR_LITERAL <num> (259) 66 88
    FLOAT_LITERAL <fnum> (260) 87
    IDENTIFIER <id> (261) 6 11 23 24 47 50 67 85
    STRING_LITERAL <id> (262) 89
    IF (263) 54
    ELSE (264) 53
    WHILE (265) 55
    REPEAT (266) 56
    UNTIL (267) 56
    FOR (268) 57 58
    SWITCH (269) 60
    CASE (270) 62
    DEFAULT (271) 63
    BREAK (272) 48
    CONTINUE (273) 49
    RETURN (274) 68 69
    INT (275) 12 18
    FLOAT (276) 13 19
    CHAR (277) 14 20
    STRING (278) 15 21
    VOID (279) 17
    CONST (280) 16 22
    EQ (281) 75
    NEQ (282) 76
    LE (283) 82
    GE (284) 83
    PLUS (285) 70
    MINUS (286) 71
    MULT (287) 72
    DIV (288) 73
    MOD (289) 74
    AND (290) 77
    OR (291) 78
    NOT (292) 79
    NO_ELSE (293)
    BITWISE_OR (294)
    BITWISE_AND (295)
    BITWISE_NOT (296)
    INC (297)
    DEC (298)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 2
        on right: 0
    $@1 (56)
        on left: 1
        on right: 2
    functions (57)
        on left: 3 4
        on right: 2 3
    function (58)
        on left: 6
        on right: 3 4
    $@2 (59)
        on left: 5
        on right: 6
    params (60)
        on left: 7 8
        on right: 6
    param_list <param> (61)
        on left: 9 10
        on right: 7 9
    param <param> (62)
        on left: 11
        on right: 9 10
    func_types <immutability> (63)
        on left: 12 13 14 15 16 17
        on right: 6 16
    type <immutability> (64)
        on left: 18 19 20 21 22
        on right: 11 22 25 26
    decl_list <idlist> (65)
        on left: 23 24
        on right: 24 25 26
    declaration (66)
        on left: 25 26
        on right: 29 57
    block (67)
        on left: 28
        on right: 46
    $@3 (68)
        on left: 27
        on right: 28
    block_content (69)
        on left: 29 30 31
        on right: 28 29 30 33
    func_block (70)
        on left: 33
        on right: 6
    $@4 (71)
        on left: 32
        on right: 33
    statements (72)
        on left: 34 35
        on right: 34 56 62 63
    statement (73)
        on left: 36 37 38 39 40 41 42 43 44 45 46
        on right: 30 34 51 53 55 57 58
    assignment (74)
        on left: 47
        on right: 36 58
    break_statement (75)
        on left: 48
        on right: 43
    continue_statement (76)
        on left: 49
        on right: 44
    func_call (77)
        on left: 50
        on right: 45
    if_statement (78)
        on left: 51 53
        on right: 37
    @5 (79)
        on left: 52
        on right: 53
    if_start (80)
        on left: 54
        on right: 51 53
    while_statement (81)
        on left: 55
        on right: 38
    repeat_until_statement (82)
        on left: 56
        on right: 39
    for_statement (83)
        on left: 57 58
        on right: 40
    switch_statement (84)
        on left: 60
        on right: 41
    @6 (85)
        on left: 59
        on right: 60
    case_list (86)
        on left: 62 63 64
        on right: 60 62 63
    @7 (87)
        on left: 61
        on right: 62
    constant <expr> (88)
        on left: 65 66 67
        on right: 62
    return_statement (89)
        on left: 68 69
        on right: 33 42
    expression <expr> (90)
        on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 26 47 54 55 56 57 58 60 68 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 • functions

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    functions   go to state 10
    function    go to state 11
    func_types  go to state 12


State 3

    0 $accept: program $end •

    $default  accept


State 4

   12 func_types: INT •

    $default  reduce using rule 12 (func_types)


State 5

   13 func_types: FLOAT •

    $default  reduce using rule 13 (func_types)


State 6

   14 func_types: CHAR •

    $default  reduce using rule 14 (func_types)


State 7

   15 func_types: STRING •

    $default  reduce using rule 15 (func_types)


State 8

   17 func_types: VOID •

    $default  reduce using rule 17 (func_types)


State 9

   16 func_types: CONST • func_types

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    func_types  go to state 13


State 10

    2 program: $@1 functions •
    3 functions: functions • function

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    CONST   shift, and go to state 9

    $default  reduce using rule 2 (program)

    function    go to state 14
    func_types  go to state 12


State 11

    4 functions: function •

    $default  reduce using rule 4 (functions)


State 12

    6 function: func_types • IDENTIFIER '(' params ')' $@2 func_block

    IDENTIFIER  shift, and go to state 15


State 13

   16 func_types: CONST func_types •

    $default  reduce using rule 16 (func_types)


State 14

    3 functions: functions function •

    $default  reduce using rule 3 (functions)


State 15

    6 function: func_types IDENTIFIER • '(' params ')' $@2 func_block

    '('  shift, and go to state 16


State 16

    6 function: func_types IDENTIFIER '(' • params ')' $@2 func_block

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    $default  reduce using rule 8 (params)

    params      go to state 22
    param_list  go to state 23
    param       go to state 24
    type        go to state 25


State 17

   18 type: INT •

    $default  reduce using rule 18 (type)


State 18

   19 type: FLOAT •

    $default  reduce using rule 19 (type)


State 19

   20 type: CHAR •

    $default  reduce using rule 20 (type)


State 20

   21 type: STRING •

    $default  reduce using rule 21 (type)


State 21

   22 type: CONST • type

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    type  go to state 26


State 22

    6 function: func_types IDENTIFIER '(' params • ')' $@2 func_block

    ')'  shift, and go to state 27


State 23

    7 params: param_list •
    9 param_list: param_list • ',' param

    ','  shift, and go to state 28

    $default  reduce using rule 7 (params)


State 24

   10 param_list: param •

    $default  reduce using rule 10 (param_list)


State 25

   11 param: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 29


State 26

   22 type: CONST type •

    $default  reduce using rule 22 (type)


State 27

    6 function: func_types IDENTIFIER '(' params ')' • $@2 func_block

    $default  reduce using rule 5 ($@2)

    $@2  go to state 30


State 28

    9 param_list: param_list ',' • param

    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    CHAR    shift, and go to state 19
    STRING  shift, and go to state 20
    CONST   shift, and go to state 21

    param  go to state 31
    type   go to state 25


State 29

   11 param: type IDENTIFIER •

    $default  reduce using rule 11 (param)


State 30

    6 function: func_types IDENTIFIER '(' params ')' $@2 • func_block

    '{'  shift, and go to state 32

    func_block  go to state 33


State 31

    9 param_list: param_list ',' param •

    $default  reduce using rule 9 (param_list)


State 32

   33 func_block: '{' • $@4 block_content return_statement '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 34


State 33

    6 function: func_types IDENTIFIER '(' params ')' $@2 func_block •

    $default  reduce using rule 6 (function)


State 34

   33 func_block: '{' $@4 • block_content return_statement '}'

    $default  reduce using rule 31 (block_content)

    block_content  go to state 35


State 35

   29 block_content: block_content • declaration
   30              | block_content • statement
   33 func_block: '{' $@4 block_content • return_statement '}'

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21
    '{'         shift, and go to state 45

    type                    go to state 46
    declaration             go to state 47
    block                   go to state 48
    statement               go to state 49
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 60


State 36

   47 assignment: IDENTIFIER • '=' expression ';'
   50 func_call: IDENTIFIER • '(' ')' ';'

    '('  shift, and go to state 61
    '='  shift, and go to state 62


State 37

   54 if_start: IF • '(' expression ')'

    '('  shift, and go to state 63


State 38

   55 while_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 64


State 39

   56 repeat_until_statement: REPEAT • statements UNTIL '(' expression ')' ';'

    $default  reduce using rule 35 (statements)

    statements  go to state 65


State 40

   57 for_statement: FOR • '(' declaration expression ';' expression ')' statement
   58              | FOR • '(' assignment expression ';' expression ')' statement

    '('  shift, and go to state 66


State 41

   60 switch_statement: SWITCH • '(' expression ')' '{' @6 case_list '}'

    '('  shift, and go to state 67


State 42

   48 break_statement: BREAK • ';'

    ';'  shift, and go to state 68


State 43

   49 continue_statement: CONTINUE • ';'

    ';'  shift, and go to state 69


State 44

   68 return_statement: RETURN • expression ';'
   69                 | RETURN • ';'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    ';'             shift, and go to state 76
    '('             shift, and go to state 77

    expression  go to state 78


State 45

   28 block: '{' • $@3 block_content '}'

    $default  reduce using rule 27 ($@3)

    $@3  go to state 79


State 46

   25 declaration: type • decl_list ';'
   26            | type • decl_list '=' expression ';'

    IDENTIFIER  shift, and go to state 80

    decl_list  go to state 81


State 47

   29 block_content: block_content declaration •

    $default  reduce using rule 29 (block_content)


State 48

   46 statement: block •

    $default  reduce using rule 46 (statement)


State 49

   30 block_content: block_content statement •

    $default  reduce using rule 30 (block_content)


State 50

   36 statement: assignment •

    $default  reduce using rule 36 (statement)


State 51

   43 statement: break_statement •

    $default  reduce using rule 43 (statement)


State 52

   44 statement: continue_statement •

    $default  reduce using rule 44 (statement)


State 53

   45 statement: func_call •

    $default  reduce using rule 45 (statement)


State 54

   37 statement: if_statement •

    $default  reduce using rule 37 (statement)


State 55

   51 if_statement: if_start • statement
   53             | if_start • statement ELSE @5 statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 82
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 56

   38 statement: while_statement •

    $default  reduce using rule 38 (statement)


State 57

   39 statement: repeat_until_statement •

    $default  reduce using rule 39 (statement)


State 58

   40 statement: for_statement •

    $default  reduce using rule 40 (statement)


State 59

   41 statement: switch_statement •

    $default  reduce using rule 41 (statement)


State 60

   33 func_block: '{' $@4 block_content return_statement • '}'
   42 statement: return_statement •

    '}'  shift, and go to state 84

    $default  reduce using rule 42 (statement)


State 61

   50 func_call: IDENTIFIER '(' • ')' ';'

    ')'  shift, and go to state 85


State 62

   47 assignment: IDENTIFIER '=' • expression ';'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 86


State 63

   54 if_start: IF '(' • expression ')'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 87


State 64

   55 while_statement: WHILE '(' • expression ')' statement

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 88


State 65

   34 statements: statements • statement
   56 repeat_until_statement: REPEAT statements • UNTIL '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    UNTIL       shift, and go to state 89
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 90
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 66

   57 for_statement: FOR '(' • declaration expression ';' expression ')' statement
   58              | FOR '(' • assignment expression ';' expression ')' statement

    IDENTIFIER  shift, and go to state 91
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21

    type         go to state 46
    declaration  go to state 92
    assignment   go to state 93


State 67

   60 switch_statement: SWITCH '(' • expression ')' '{' @6 case_list '}'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 94


State 68

   48 break_statement: BREAK ';' •

    $default  reduce using rule 48 (break_statement)


State 69

   49 continue_statement: CONTINUE ';' •

    $default  reduce using rule 49 (continue_statement)


State 70

   86 expression: NUMBER •

    $default  reduce using rule 86 (expression)


State 71

   88 expression: CHAR_LITERAL •

    $default  reduce using rule 88 (expression)


State 72

   87 expression: FLOAT_LITERAL •

    $default  reduce using rule 87 (expression)


State 73

   85 expression: IDENTIFIER •

    $default  reduce using rule 85 (expression)


State 74

   89 expression: STRING_LITERAL •

    $default  reduce using rule 89 (expression)


State 75

   79 expression: NOT • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 95


State 76

   69 return_statement: RETURN ';' •

    $default  reduce using rule 69 (return_statement)


State 77

   84 expression: '(' • expression ')'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 96


State 78

   68 return_statement: RETURN expression • ';'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ';'    shift, and go to state 108
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 79

   28 block: '{' $@3 • block_content '}'

    $default  reduce using rule 31 (block_content)

    block_content  go to state 111


State 80

   23 decl_list: IDENTIFIER •

    $default  reduce using rule 23 (decl_list)


State 81

   24 decl_list: decl_list • ',' IDENTIFIER
   25 declaration: type decl_list • ';'
   26            | type decl_list • '=' expression ';'

    ';'  shift, and go to state 112
    ','  shift, and go to state 113
    '='  shift, and go to state 114


State 82

   51 if_statement: if_start statement •
   53             | if_start statement • ELSE @5 statement

    ELSE  shift, and go to state 115

    $default  reduce using rule 51 (if_statement)


State 83

   42 statement: return_statement •

    $default  reduce using rule 42 (statement)


State 84

   33 func_block: '{' $@4 block_content return_statement '}' •

    $default  reduce using rule 33 (func_block)


State 85

   50 func_call: IDENTIFIER '(' ')' • ';'

    ';'  shift, and go to state 116


State 86

   47 assignment: IDENTIFIER '=' expression • ';'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ';'    shift, and go to state 117
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 87

   54 if_start: IF '(' expression • ')'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 118
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 88

   55 while_statement: WHILE '(' expression • ')' statement
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 119
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 89

   56 repeat_until_statement: REPEAT statements UNTIL • '(' expression ')' ';'

    '('  shift, and go to state 120


State 90

   34 statements: statements statement •

    $default  reduce using rule 34 (statements)


State 91

   47 assignment: IDENTIFIER • '=' expression ';'

    '='  shift, and go to state 62


State 92

   57 for_statement: FOR '(' declaration • expression ';' expression ')' statement

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 121


State 93

   58 for_statement: FOR '(' assignment • expression ';' expression ')' statement

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 122


State 94

   60 switch_statement: SWITCH '(' expression • ')' '{' @6 case_list '}'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 123
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 95

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   79           | NOT expression •
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    $default  reduce using rule 79 (expression)


State 96

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression
   84           | '(' expression • ')'

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 124
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 97

   75 expression: expression EQ • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 125


State 98

   76 expression: expression NEQ • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 126


State 99

   82 expression: expression LE • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 127


State 100

   83 expression: expression GE • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 128


State 101

   70 expression: expression PLUS • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 129


State 102

   71 expression: expression MINUS • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 130


State 103

   72 expression: expression MULT • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 131


State 104

   73 expression: expression DIV • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 132


State 105

   74 expression: expression MOD • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 133


State 106

   77 expression: expression AND • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 134


State 107

   78 expression: expression OR • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 135


State 108

   68 return_statement: RETURN expression ';' •

    $default  reduce using rule 68 (return_statement)


State 109

   80 expression: expression '<' • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 136


State 110

   81 expression: expression '>' • expression

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 137


State 111

   28 block: '{' $@3 block_content • '}'
   29 block_content: block_content • declaration
   30              | block_content • statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    INT         shift, and go to state 17
    FLOAT       shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    CONST       shift, and go to state 21
    '{'         shift, and go to state 45
    '}'         shift, and go to state 138

    type                    go to state 46
    declaration             go to state 47
    block                   go to state 48
    statement               go to state 49
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 112

   25 declaration: type decl_list ';' •

    $default  reduce using rule 25 (declaration)


State 113

   24 decl_list: decl_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 139


State 114

   26 declaration: type decl_list '=' • expression ';'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 140


State 115

   53 if_statement: if_start statement ELSE • @5 statement

    $default  reduce using rule 52 (@5)

    @5  go to state 141


State 116

   50 func_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 50 (func_call)


State 117

   47 assignment: IDENTIFIER '=' expression ';' •

    $default  reduce using rule 47 (assignment)


State 118

   54 if_start: IF '(' expression ')' •

    $default  reduce using rule 54 (if_start)


State 119

   55 while_statement: WHILE '(' expression ')' • statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 142
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 120

   56 repeat_until_statement: REPEAT statements UNTIL '(' • expression ')' ';'

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 143


State 121

   57 for_statement: FOR '(' declaration expression • ';' expression ')' statement
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ';'    shift, and go to state 144
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 122

   58 for_statement: FOR '(' assignment expression • ';' expression ')' statement
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ';'    shift, and go to state 145
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 123

   60 switch_statement: SWITCH '(' expression ')' • '{' @6 case_list '}'

    '{'  shift, and go to state 146


State 124

   84 expression: '(' expression ')' •

    $default  reduce using rule 84 (expression)


State 125

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   75           | expression EQ expression •
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110

    $default  reduce using rule 75 (expression)


State 126

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   76           | expression NEQ expression •
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110

    $default  reduce using rule 76 (expression)


State 127

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   82           | expression LE expression •
   83           | expression • GE expression

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 82 (expression)


State 128

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression
   83           | expression GE expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 83 (expression)


State 129

   70 expression: expression • PLUS expression
   70           | expression PLUS expression •
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 70 (expression)


State 130

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   71           | expression MINUS expression •
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 71 (expression)


State 131

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   72           | expression MULT expression •
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    $default  reduce using rule 72 (expression)


State 132

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   73           | expression DIV expression •
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    $default  reduce using rule 73 (expression)


State 133

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   74           | expression MOD expression •
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    $default  reduce using rule 74 (expression)


State 134

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   77           | expression AND expression •
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110

    $default  reduce using rule 77 (expression)


State 135

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   78           | expression OR expression •
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110

    $default  reduce using rule 78 (expression)


State 136

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   80           | expression '<' expression •
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 80 (expression)


State 137

   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   81           | expression '>' expression •
   82           | expression • LE expression
   83           | expression • GE expression

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 81 (expression)


State 138

   28 block: '{' $@3 block_content '}' •

    $default  reduce using rule 28 (block)


State 139

   24 decl_list: decl_list ',' IDENTIFIER •

    $default  reduce using rule 24 (decl_list)


State 140

   26 declaration: type decl_list '=' expression • ';'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ';'    shift, and go to state 147
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 141

   53 if_statement: if_start statement ELSE @5 • statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 148
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 142

   55 while_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 55 (while_statement)


State 143

   56 repeat_until_statement: REPEAT statements UNTIL '(' expression • ')' ';'
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 149
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 144

   57 for_statement: FOR '(' declaration expression ';' • expression ')' statement

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 150


State 145

   58 for_statement: FOR '(' assignment expression ';' • expression ')' statement

    NUMBER          shift, and go to state 70
    CHAR_LITERAL    shift, and go to state 71
    FLOAT_LITERAL   shift, and go to state 72
    IDENTIFIER      shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    NOT             shift, and go to state 75
    '('             shift, and go to state 77

    expression  go to state 151


State 146

   60 switch_statement: SWITCH '(' expression ')' '{' • @6 case_list '}'

    $default  reduce using rule 59 (@6)

    @6  go to state 152


State 147

   26 declaration: type decl_list '=' expression ';' •

    $default  reduce using rule 26 (declaration)


State 148

   53 if_statement: if_start statement ELSE @5 statement •

    $default  reduce using rule 53 (if_statement)


State 149

   56 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' • ';'

    ';'  shift, and go to state 153


State 150

   57 for_statement: FOR '(' declaration expression ';' expression • ')' statement
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 154
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 151

   58 for_statement: FOR '(' assignment expression ';' expression • ')' statement
   70 expression: expression • PLUS expression
   71           | expression • MINUS expression
   72           | expression • MULT expression
   73           | expression • DIV expression
   74           | expression • MOD expression
   75           | expression • EQ expression
   76           | expression • NEQ expression
   77           | expression • AND expression
   78           | expression • OR expression
   80           | expression • '<' expression
   81           | expression • '>' expression
   82           | expression • LE expression
   83           | expression • GE expression

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MULT   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    ')'    shift, and go to state 155
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110


State 152

   60 switch_statement: SWITCH '(' expression ')' '{' @6 • case_list '}'

    $default  reduce using rule 64 (case_list)

    case_list  go to state 156


State 153

   56 repeat_until_statement: REPEAT statements UNTIL '(' expression ')' ';' •

    $default  reduce using rule 56 (repeat_until_statement)


State 154

   57 for_statement: FOR '(' declaration expression ';' expression ')' • statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 157
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 155

   58 for_statement: FOR '(' assignment expression ';' expression ')' • statement

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    block                   go to state 48
    statement               go to state 158
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 156

   60 switch_statement: SWITCH '(' expression ')' '{' @6 case_list • '}'
   62 case_list: case_list • CASE constant ':' @7 statements
   63          | case_list • DEFAULT ':' statements

    CASE     shift, and go to state 159
    DEFAULT  shift, and go to state 160
    '}'      shift, and go to state 161


State 157

   57 for_statement: FOR '(' declaration expression ';' expression ')' statement •

    $default  reduce using rule 57 (for_statement)


State 158

   58 for_statement: FOR '(' assignment expression ';' expression ')' statement •

    $default  reduce using rule 58 (for_statement)


State 159

   62 case_list: case_list CASE • constant ':' @7 statements

    NUMBER        shift, and go to state 162
    CHAR_LITERAL  shift, and go to state 163
    IDENTIFIER    shift, and go to state 164

    constant  go to state 165


State 160

   63 case_list: case_list DEFAULT • ':' statements

    ':'  shift, and go to state 166


State 161

   60 switch_statement: SWITCH '(' expression ')' '{' @6 case_list '}' •

    $default  reduce using rule 60 (switch_statement)


State 162

   65 constant: NUMBER •

    $default  reduce using rule 65 (constant)


State 163

   66 constant: CHAR_LITERAL •

    $default  reduce using rule 66 (constant)


State 164

   67 constant: IDENTIFIER •

    $default  reduce using rule 67 (constant)


State 165

   62 case_list: case_list CASE constant • ':' @7 statements

    ':'  shift, and go to state 167


State 166

   63 case_list: case_list DEFAULT ':' • statements

    $default  reduce using rule 35 (statements)

    statements  go to state 168


State 167

   62 case_list: case_list CASE constant ':' • @7 statements

    $default  reduce using rule 61 (@7)

    @7  go to state 169


State 168

   34 statements: statements • statement
   63 case_list: case_list DEFAULT ':' statements •

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    $default  reduce using rule 63 (case_list)

    block                   go to state 48
    statement               go to state 90
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83


State 169

   62 case_list: case_list CASE constant ':' @7 • statements

    $default  reduce using rule 35 (statements)

    statements  go to state 170


State 170

   34 statements: statements • statement
   62 case_list: case_list CASE constant ':' @7 statements •

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    REPEAT      shift, and go to state 39
    FOR         shift, and go to state 40
    SWITCH      shift, and go to state 41
    BREAK       shift, and go to state 42
    CONTINUE    shift, and go to state 43
    RETURN      shift, and go to state 44
    '{'         shift, and go to state 45

    $default  reduce using rule 62 (case_list)

    block                   go to state 48
    statement               go to state 90
    assignment              go to state 50
    break_statement         go to state 51
    continue_statement      go to state 52
    func_call               go to state 53
    if_statement            go to state 54
    if_start                go to state 55
    while_statement         go to state 56
    repeat_until_statement  go to state 57
    for_statement           go to state 58
    switch_statement        go to state 59
    return_statement        go to state 83
